import sys
from pathlib import Path

# Add the dev directory to the path so we can import the review module
dev_dir = Path(__file__).parent.parent
sys.path.insert(0, str(dev_dir / "mcps"))

from review import filter_python_diff


def test_filter_python_diff_excludes_protos():
    """Test that filter_python_diff excludes Python files in mlflow/protos directory."""
    # Create a mock diff with both regular Python files and proto files
    mock_diff = """diff --git a/mlflow/utils/example.py b/mlflow/utils/example.py
index abc123..def456 100644
--- a/mlflow/utils/example.py
+++ b/mlflow/utils/example.py
@@ -1,3 +1,4 @@
 import os
+import sys

 def hello():
diff --git a/mlflow/protos/service_pb2.py b/mlflow/protos/service_pb2.py
index 111222..333444 100644
--- a/mlflow/protos/service_pb2.py
+++ b/mlflow/protos/service_pb2.py
@@ -1,3 +1,4 @@
 # Generated by the protocol buffer compiler.  DO NOT EDIT!
+# Auto-generated content
 # source: service.proto

diff --git a/tests/test_example.py b/tests/test_example.py
index 555666..777888 100644
--- a/tests/test_example.py
+++ b/tests/test_example.py
@@ -1,3 +1,4 @@
 import pytest
+import unittest

 def test_something():
diff --git a/mlflow/protos/model_registry_pb2.py b/mlflow/protos/model_registry_pb2.py
index 999000..111222 100644
--- a/mlflow/protos/model_registry_pb2.py
+++ b/mlflow/protos/model_registry_pb2.py
@@ -1,3 +1,4 @@
 # Generated by the protocol buffer compiler.  DO NOT EDIT!
+# More auto-generated content
 # source: model_registry.proto

"""

    result = filter_python_diff(mock_diff)

    # The result should include regular Python files but exclude proto files
    assert "mlflow/utils/example.py" in result
    assert "tests/test_example.py" in result
    assert "mlflow/protos/service_pb2.py" not in result
    assert "mlflow/protos/model_registry_pb2.py" not in result
    assert "Generated by the protocol buffer compiler" not in result
    assert "Auto-generated content" not in result


def test_filter_python_diff_includes_regular_files():
    """Test that filter_python_diff still includes regular Python files."""
    mock_diff = """diff --git a/mlflow/tracking/client.py b/mlflow/tracking/client.py
index abc123..def456 100644
--- a/mlflow/tracking/client.py
+++ b/mlflow/tracking/client.py
@@ -1,3 +1,4 @@
 import mlflow
+from mlflow import tracking

 class Client:
"""

    result = filter_python_diff(mock_diff)

    # The result should include the regular Python file
    assert "mlflow/tracking/client.py" in result
    assert "import mlflow" in result
    assert "from mlflow import tracking" in result


def test_filter_python_diff_excludes_non_python_files():
    """Test that filter_python_diff excludes non-Python files."""
    mock_diff = """diff --git a/README.md b/README.md
index abc123..def456 100644
--- a/README.md
+++ b/README.md
@@ -1,3 +1,4 @@
 # MLflow
+A machine learning platform

 ## Installation
diff --git a/mlflow/utils/example.py b/mlflow/utils/example.py
index 111222..333444 100644
--- a/mlflow/utils/example.py
+++ b/mlflow/utils/example.py
@@ -1,3 +1,4 @@
 import os
+import sys

 def hello():
"""

    result = filter_python_diff(mock_diff)

    # The result should include only the Python file, not the markdown file
    assert "mlflow/utils/example.py" in result
    assert "import os" in result
    assert "README.md" not in result
    assert "A machine learning platform" not in result


def test_filter_python_diff_empty_input():
    """Test that filter_python_diff handles empty input."""
    result = filter_python_diff("")
    assert result == ""


def test_filter_python_diff_no_python_files():
    """Test that filter_python_diff handles diff with no Python files."""
    mock_diff = """diff --git a/README.md b/README.md
index abc123..def456 100644
--- a/README.md
+++ b/README.md
@@ -1,3 +1,4 @@
 # MLflow
+A machine learning platform
"""

    result = filter_python_diff(mock_diff)

    # Should return empty result since no Python files are present
    assert result == ""
