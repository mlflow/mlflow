name: Run cross version tests

on:
  workflow_call:
    inputs:
      matrix:
        required: true
        type: string

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash --noprofile --norc -exo pipefail {0}

env:
  MLFLOW_HOME: /home/runner/work/mlflow/mlflow
  PIP_EXTRA_INDEX_URL: https://download.pytorch.org/whl/cpu

jobs:
  job:
    runs-on: ${{ matrix.runs_on }}
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(inputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          repository: ${{ github.event_name == 'schedule' && 'mlflow/mlflow' || github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
      - uses: ./.github/actions/free-disk-space
        if: matrix.free_disk_space
      - uses: ./.github/actions/setup-python
        with:
          python-version: ${{ matrix.python }}
      - uses: ./.github/actions/setup-pyenv
      - uses: ./.github/actions/setup-java
        with:
          java-version: ${{ matrix.java }}
      - name: Install mlflow & test dependencies
        run: |
          pip install wheel
          pip install .[extras]
          pip install -r requirements/test-requirements.txt
      - name: Install ${{ matrix.package }} ${{ matrix.version }}
        run: |
          ${{ matrix.install }}
      - uses: ./.github/actions/show-versions
      - uses: ./.github/actions/pipdeptree
      - name: Pre-test
        if: matrix.pre_test
        run: |
          ${{ matrix.pre_test }}
      - name: Run tests
        env:
          MLFLOW_CONDA_HOME: /usr/share/miniconda
          SPARK_LOCAL_IP: localhost
          JOHNSNOWLABS_LICENSE_JSON: ${{ secrets.JOHNSNOWLABS_LICENSE_JSON }}
          HF_HUB_ENABLE_HF_TRANSFER: 1
        run: |
          ${{ matrix.run }}
