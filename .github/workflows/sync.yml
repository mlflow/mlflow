name: Sync PR

on:
  issue_comment:
    types: [created]

defaults:
  run:
    shell: bash

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.event.issue.pull_request && startsWith(github.event.comment.body, '/sync') }}
    permissions:
      pull-requests: write
      issues: write
    outputs:
      should_sync: ${{ fromJSON(steps.validate.outputs.result).shouldSync }}
      head_sha: ${{ fromJSON(steps.validate.outputs.result).head_sha }}
      pull_number: ${{ fromJSON(steps.validate.outputs.result).pull_number }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: |
            .github

      - name: Initial validation and reaction
        id: validate
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            core.debug(JSON.stringify(context, null, 2));
            const sync = require('./.github/workflows/sync.js');

            // Validate comment is exactly "/sync"
            const { comment } = context.payload;
            if (!sync.shouldSync(comment)) {
              await sync.updateTriggerComment(context, github, comment.id, '❌ Invalid sync command. Use exactly "/sync"');
              core.setFailed('Invalid sync command. Use exactly "/sync"');
              return { shouldSync: false };
            }

            // Validate author permissions
            const { author_association } = comment;
            if (!sync.isAuthorAllowed({ author_association })) {
              const message = `❌ **Sync failed**: Only repository owners, members, or collaborators can use the /sync command. @${comment.user.login} (${author_association}) does not have sufficient permissions.`;
              await sync.updateTriggerComment(context, github, comment.id, message);
              core.setFailed(`User ${comment.user.login} does not have sufficient permissions`);
              return { shouldSync: false };
            }

            // Add rocket reaction
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: comment.id,
              content: "rocket",
            });

            // Update trigger comment with workflow link
            await sync.updateTriggerComment(context, github, comment.id, `⏳ Sync workflow started`);

            // Get PR info
            const pullInfo = await sync.getPullInfo(context, github);
            return { ...pullInfo, shouldSync: true };

  sync:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: validate
    if: ${{ needs.validate.outputs.should_sync == 'true' }}
    permissions:
      pull-requests: write
      issues: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: |
            .github

      - name: Perform sync
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          PULL_NUMBER: ${{ needs.validate.outputs.pull_number }}
          HEAD_SHA: ${{ needs.validate.outputs.head_sha }}
        with:
          script: |
            const sync = require('./.github/workflows/sync.js');
            const pullInfo = {
              pull_number: parseInt(process.env.PULL_NUMBER, 10),
              head_sha: process.env.HEAD_SHA,
            };
            await sync.performSync(context, github, pullInfo, null);
