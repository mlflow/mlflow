name: Push-Images

on:
  release:
    types:
      - published
      - edited

jobs:
  push-images:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      packages: write # to push to ghcr.io
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: ./.github/actions/setup-python

      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if should update latest tag
        id: check_latest
        run: |
          CURRENT_VERSION=${GITHUB_REF_NAME#v}

          HIGHEST_VERSION=$(gh release list --exclude-pre-releases --exclude-drafts --limit 100 | \
            grep -E '^v[0-9]+\.[0-9]+\.[0-9]+\s' | \
            awk '{print $1}' | \
            sed 's/^v//' | \
            sort -V | \
            tail -n1)

          if [ -z "$HIGHEST_VERSION" ] || [ "$(echo -e "$CURRENT_VERSION\n$HIGHEST_VERSION" | sort -V | tail -n1)" = "$CURRENT_VERSION" ]; then
            echo "should_update_latest=true" >> $GITHUB_OUTPUT
          else
            echo "should_update_latest=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Gather Docker Metadata for Tracking
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4.6.0
        with:
          images: |
            ghcr.io/mlflow/mlflow
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable=${{ steps.check_latest.outputs.should_update_latest == 'true' }}

      - name: Build and Push Base Image
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # v3.3.1
        with:
          context: docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}

      - name: Gather Docker Metadata for Model Server
        id: modelmeta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4.6.0
        with:
          images: |
            ghcr.io/mlflow/model-server
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable=${{ steps.check_latest.outputs.should_update_latest == 'true' }}

      - name: Build Model Server Image
        run: |
          pip install .
          mlflow models build-docker -n model-server:latest --mlflow-home `pwd`

      - name: Push Model Server Image
        run: |
          set -x

          tags=$(echo -n "${{ steps.modelmeta.outputs.tags }}" | tr '\n' ' ')
          for tag in $tags; do
            docker tag model-server:latest $tag
            docker push $tag
          done
