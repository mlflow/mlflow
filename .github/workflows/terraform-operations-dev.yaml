name: "Terraform Operations for dev"

on:
  push:
    branches:
      - master
    paths:
      - "terraform/**"
      - "terragrunt/**"
      - ".github/workflows/terraform-operations.yaml"
      
  workflow_dispatch:
    inputs:
      operation:
        type: choice
        description: Operation
        required: false
        options:
          - plan
          - apply

env:
  tf_version: "1.3.3"
  tg_version: "0.40.1"
  target_operation: "${{ github.event.inputs.operation || 'apply' }}"
  target_environment: dev
  working_dir: "/home/runner/work/nuodata-mlflow/nuodata-mlflow/terragrunt"

jobs:
  setup_environment:
    name: "Setup Environment"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Print Values
        run: |
          echo "Working Dir: ${{ env.working_dir }}/${{ env.target_environment }}"
    
    outputs:
      target_operation: ${{ env.target_operation }}
      working_dir: ${{ env.working_dir }}/${{ env.target_environment }}
      

  terragrunt_operations:
    name: "Terragrunt Operations"
    needs: [setup_environment]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            terragrunt
            terraform

      - name: Create temporary HCL file with overridden account ID
        env:
          ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID_DEV }}
        run: |
            echo "locals {" > terragrunt/dev/params.hcl
            echo "  aws_account_id = \"${ACCOUNT_ID}\"" >> terragrunt/dev/params.hcl
            echo "  environment    = \"dev\"" >> terragrunt/dev/params.hcl
            echo "  aws_region     = \"us-west-1\"" >> terragrunt/dev/params.hcl
            echo "  app_name       = \"nuodata-mlflow\"" >> terragrunt/dev/params.hcl
            echo "  tags = {" >> terragrunt/dev/params.hcl
            echo "    env = \"dev\"" >> terragrunt/dev/params.hcl
            echo "    project = \"nuodata-mlflow\"" >> terragrunt/dev/params.hcl
            echo "  }" >> terragrunt/dev/params.hcl
            echo "}" >> terragrunt/dev/params.hcl


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID_DEV}}:role/github-actions-terraform-role
            aws-region: us-west-1

      - name: "Terragrunt Plan"
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ needs.setup_environment.outputs.working_dir }}
          tg_command: "plan"

      - name: "Terragrunt Apply"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ needs.setup_environment.outputs.working_dir }}
          tg_command: "apply -auto-approve"