name: Lint

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  push:
    branches:
      - master
      - branch-[0-9]+.[0-9]+
  merge_group:
    types:
      - checks_requested

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash --noprofile --norc -exo pipefail {0}

env:
  PIP_EXTRA_INDEX_URL: https://download.pytorch.org/whl/cpu

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/untracked
      - uses: ./.github/actions/setup-python
        id: setup-python
      - uses: astral-sh/setup-uv@v3
        with:
          version: 0.5.4
      - name: Add problem matchers
        run: |
          echo "::add-matcher::.github/workflows/matchers/clint.json"
          echo "::add-matcher::.github/workflows/matchers/format.json"
          echo "::add-matcher::.github/workflows/matchers/ruff.json"
          echo "::add-matcher::.github/workflows/matchers/typos.json"
      - name: Install dependencies
        run: |
          uv pip install --system -r requirements/lint-requirements.txt
          dev/install-taplo.sh
          dev/install-typos.sh
      - uses: ./.github/actions/show-versions
      - uses: ./.github/actions/pipdeptree
      - name: Install pre-commit hooks
        run: |
          pre-commit install
      - name: Run pre-commit
        id: pre-commit
        env:
          IS_MAINTAINER: ${{ contains(fromJSON('["OWNER", "MEMBER", "COLLABORATOR"]'), github.event.pull_request.author_association )}}
          NO_FIX: "true"
        run: |
          pre-commit run --all-files
