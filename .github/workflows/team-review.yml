name: Team review

on:
  pull_request_target:
    types: [review_requested]

jobs:
  review:
    runs-on: ubuntu-latest
    if: ${{ github.event.requested_reviewer.login == 'mlflow-automation'}}
    timeout-minutes: 5
    permissions:
      pull-requests: write
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const pull_number = context.payload.pull_request.number;
            const members = [
              "B-Step62",
              "BenWilson2",
              "daniellok-db",
              "harupy",
              "serena-ruan",
              "TomeHirata",
              "WeichenXu123",
              "xq-yin",
            ];
            const author = context.payload.pull_request.user.login;
            const reviews = await github.rest.pulls.listReviews({
              owner,
              repo,
              pull_number,
            });
            const approved = reviews.data
              .filter((r) => r.state === "APPROVED")
              .map((r) => r.user.login);
            await github.rest.pulls.requestReviewers({
              owner,
              repo,
              pull_number,
              reviewers: members.filter((m) => !approved.includes(m) && m !== author),
            });
            await github.rest.pulls.removeRequestedReviewers({
              owner,
              repo,
              pull_number,
              reviewers: ["mlflow-automation"],
            });
