name: Recipe template tests

on:
  workflow_dispatch:
    inputs:
      repository:
        description: >
          [Optional] Repository name with owner. For example, mlflow/recipes-examples.
        required: true
        default: "mlflow/recipes-examples"
      ref:
        description: >
          [Optional] The branch, tag or SHA to checkout. When checking out the repository that
           triggered a workflow, this defaults to the reference or SHA for that event. Otherwise,
           uses the default branch.
        required: false
        default: ""

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

# Use `bash --noprofile --norc -exo pipefail` by default for all `run` steps in this workflow:
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#defaultsrun
defaults:
  run:
    shell: bash --noprofile --norc -exo pipefail {0}

env:
  # Note miniconda is pre-installed in the virtual environments for GitHub Actions:
  # https://github.com/actions/virtual-environments/blob/main/images/linux/scripts/installers/miniconda.sh
  MLFLOW_CONDA_HOME: /usr/share/miniconda
  PYTHONUTF8: "1"

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions: {}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          path: ${{ github.event.inputs.repository }}
          repository: ${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
      - uses: ./.github/actions/setup-python
      - uses: ./.github/actions/cache-pip
      - name: Add problem matchers
        run: |
          echo "::add-matcher::.github/workflows/matchers/clint.json"
          echo "::add-matcher::.github/workflows/matchers/black.json"
          echo "::add-matcher::.github/workflows/matchers/ruff.json"
      - name: Install dependencies
        run: |
          pip install -r ${{ github.event.inputs.repository }}/requirements/lint-requirements.txt
      - name: Install pre-commit hooks
        run: |
          cd ${{ github.event.inputs.repository }}
          pre-commit install -t pre-commit -t prepare-commit-msg
      - name: Run pre-commit
        id: pre-commit
        run: |
          cd ${{ github.event.inputs.repository }}
          pre-commit run --all-files
  recipe:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions: {}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          path: ${{ github.event.inputs.repository }}
          repository: ${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
      - uses: ./.github/actions/setup-python
      - name: Install dependencies
        run: |
          pip install .
          pip install -r ${{ github.event.inputs.repository }}/requirements.txt
          pip install -r ${{ github.event.inputs.repository }}/requirements/test-requirements.txt
          # This dependency is needed pytest.ini uses pytest-cov
          pip install pytest-cov
      - name: Run tests
        run: |
          cd ${{ github.event.inputs.repository }} && pytest tests --rootdir .
  recipe-windows:
    runs-on: windows-latest
    timeout-minutes: 120
    permissions: {}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          path: ${{ github.event.inputs.repository }}
          repository: ${{ github.event.inputs.repository }}
          ref: ${{ github.event.inputs.ref }}
      - uses: ./.github/actions/setup-python
      - name: Install dependencies
        run: |
          pip install .
          pip install -r ${{ github.event.inputs.repository }}/requirements.txt
          pip install -r ${{ github.event.inputs.repository }}/requirements/test-requirements.txt
          # This dependency is needed pytest.ini uses pytest-cov
          pip install pytest-cov
      - name: Run tests
        run: |
          cd ${{ github.event.inputs.repository }} &&  pytest tests --rootdir .
