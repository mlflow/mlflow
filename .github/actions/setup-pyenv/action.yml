name: "setup-pyenv"
description: "Setup pyenv"
runs:
  using: "composite"
  steps:
    ########## Ubuntu ##########
    # Note: We need minimal build deps for MLflow's virtualenv creation which uses pyenv install
    - name: Install minimal dependencies for pyenv
      if: runner.os == 'Linux'
      shell: bash
      run: |
        # Install minimal dependencies required for Python modules used by MLflow
        # These are needed when MLflow creates virtualenvs with pyenv install
        sudo apt-get update && sudo apt-get install -y --no-install-recommends \
          libbz2-dev \
          libreadline-dev \
          liblzma-dev

        # Check if pyenv is already installed
        if [ -d "$HOME/.pyenv" ]; then
          echo "pyenv is already installed at $HOME/.pyenv"
        else
          echo "Installing pyenv..."
          # Use the official pyenv installer which is fast (~2 seconds)
          curl -fsSL https://pyenv.run | bash
        fi
    - name: Setup environment variables
      if: runner.os == 'Linux'
      shell: bash
      run: |
        PYENV_ROOT="$HOME/.pyenv"
        PYENV_BIN="$PYENV_ROOT/bin"
        echo "$PYENV_BIN" >> $GITHUB_PATH
        echo "PYENV_ROOT=$PYENV_ROOT" >> $GITHUB_ENV
    - name: Check pyenv version
      if: runner.os == 'Linux'
      shell: bash
      run: |
        pyenv --version

    ########## Windows ##########
    # Note: Windows support for pyenv - only installing binary
    - name: Install pyenv
      if: runner.os == 'Windows'
      shell: bash
      run: |
        uv pip install pyenv-win --target $HOME\\.pyenv
    - name: Setup environment variables
      if: runner.os == 'Windows'
      shell: bash
      run: |
        echo "PYENV=$USERPROFILE\.pyenv\pyenv-win\\" >> $GITHUB_ENV
        echo "PYENV_ROOT=$USERPROFILE\.pyenv\pyenv-win\\" >> $GITHUB_ENV
        echo "PYENV_HOME=$USERPROFILE\.pyenv\pyenv-win\\" >> $GITHUB_ENV
        echo "$USERPROFILE\.pyenv\pyenv-win\\bin\\" >> $GITHUB_PATH
    - name: Check pyenv version
      if: runner.os == 'Windows'
      shell: bash
      run: |
        pyenv --version

    - name: Install virtualenv
      shell: bash
      run: |
        # Create a virtual environment if it doesn't exist
        if [ ! -d ".venv" ]; then
          uv venv
        fi
        uv pip install virtualenv
