{"version":3,"file":"common-Ce1R0mCb.js","sources":["../src/test-utils/common.ts"],"sourcesContent":["const duBoisClassPrefix = 'du-bois-light';\n\n/**\n * Used with the `selectEvent` utils for both Enzyme and RTL.\n */\nexport const selectClasses = {\n  clear: `${duBoisClassPrefix}-select-clear`,\n  item: `${duBoisClassPrefix}-select-selection-item`,\n  list: 'rc-virtual-list',\n  open: `${duBoisClassPrefix}-select-open`,\n  option: `${duBoisClassPrefix}-select-item-option-content`,\n  removeItem: `${duBoisClassPrefix}-select-selection-item-remove`,\n  selector: `${duBoisClassPrefix}-select-selector`,\n};\n\nexport interface GetTableRowByCellTextOptions {\n  columnHeaderName?: string | RegExp;\n}\n\nexport interface RowIdentifier {\n  /** Text in a cell that uniquely identifies a row. */\n  cellText: string;\n  /** Name of the column to use when searching for `cellText`.  */\n  columnHeaderName?: string | RegExp;\n}\n\nexport interface TableRows<T> {\n  bodyRows: T[];\n  headerRow: T;\n}\n\n/**\n * @param columns List of column names\n * @param rows List of rows, where each row is a list of cell texts\n * @returns Markdown formatted string representing the data\n *\n * @example\n * // returns the string:\n * //   | Name | Fruit |\n * //   | --- | --- |\n * //   | Alice | Apple |\n * //   | Brady | Banana |\n * createMarkdownTable(['Name', 'Age'], [['Alice', 'Apple'], ['Brady', 'Banana']])\n */\nexport function createMarkdownTable(columns: string[], rows: string[][]) {\n  const headerRow = `| ${columns.join(' | ')} |`;\n  const separatorRow = `| ${columns.fill('---').join(' | ')} |`;\n  const dataRows = `${rows.map((row) => `| ${row.join(' | ')} |`).join('\\n')}`;\n  const markdownTable = `${headerRow}\\n${separatorRow}\\n${dataRows}`;\n  return markdownTable;\n}\n"],"names":["duBoisClassPrefix","selectClasses","clear","item","list","open","option","removeItem","selector","createMarkdownTable","columns","rows","headerRow","join","separatorRow","fill","dataRows","map","row","markdownTable"],"mappings":"AAAA,MAAMA,iBAAoB,GAAA,eAAA,CAAA;AAE1B;;UAGaC,aAAgB,GAAA;IAC3BC,KAAO,EAAA,CAAA,EAAGF,iBAAkB,CAAA,aAAa,CAAC;IAC1CG,IAAM,EAAA,CAAA,EAAGH,iBAAkB,CAAA,sBAAsB,CAAC;IAClDI,IAAM,EAAA,iBAAA;IACNC,IAAM,EAAA,CAAA,EAAGL,iBAAkB,CAAA,YAAY,CAAC;IACxCM,MAAQ,EAAA,CAAA,EAAGN,iBAAkB,CAAA,2BAA2B,CAAC;IACzDO,UAAY,EAAA,CAAA,EAAGP,iBAAkB,CAAA,6BAA6B,CAAC;IAC/DQ,QAAU,EAAA,CAAA,EAAGR,iBAAkB,CAAA,gBAAgB,CAAC;AAClD,EAAE;AAkBF;;;;;;;;;;;;AAYC,IACM,SAASS,mBAAoBC,CAAAA,OAAiB,EAAEC,IAAgB,EAAA;IACrE,MAAMC,SAAAA,GAAY,CAAC,EAAE,EAAEF,QAAQG,IAAI,CAAC,KAAO,CAAA,CAAA,EAAE,CAAC,CAAA;AAC9C,IAAA,MAAMC,YAAe,GAAA,CAAC,EAAE,EAAEJ,OAAQK,CAAAA,IAAI,CAAC,KAAA,CAAA,CAAOF,IAAI,CAAC,KAAO,CAAA,CAAA,EAAE,CAAC,CAAA;AAC7D,IAAA,MAAMG,WAAW,CAAGL,EAAAA,IAAAA,CAAKM,GAAG,CAAC,CAACC,MAAQ,CAAC,EAAE,EAAEA,GAAIL,CAAAA,IAAI,CAAC,KAAO,CAAA,CAAA,EAAE,CAAC,CAAEA,CAAAA,IAAI,CAAC,IAAO,CAAA,CAAA,CAAA,CAAA;IAC5E,MAAMM,aAAAA,GAAgB,GAAGP,SAAU,CAAA,EAAE,EAAEE,YAAa,CAAA,EAAE,EAAEE,QAAU,CAAA,CAAA,CAAA;IAClE,OAAOG,aAAAA,CAAAA;AACT;;;;"}