{"version":3,"file":"index-BHfD-Kth.js","sources":["../src/design-system/utils/useCallbackOnEnter.ts","../src/design-system/Icon/__generated/icons/ClockIcon.tsx","../src/design-system/Icon/__generated/icons/MegaphoneIcon.tsx","../src/design-system/Input/Group.tsx","../src/design-system/utils/useCallbackOnceUntilReset.ts","../src/design-system/utils/useChainEventHandlers.ts","../src/design-system/Input/Input.tsx","../src/design-system/Input/Password.tsx","../src/design-system/Input/TextArea.tsx","../src/design-system/Input/index.tsx"],"sourcesContent":["import { useCallback, useMemo, useRef } from 'react';\n\n/**\n * ES-1267895 When entering composed characters, we should not submit forms on Enter.\n * For instance Japanese characters are composed and we should not submit forms when\n * the user is still composing the characters.\n *\n * This hook provides a reusable way to invoke a callback on Enter,\n * but not when composing characters.\n * This can be used to invoke a form submission callback when Enter is pressed.\n * @param callback VoidFunction to call when the Enter is pressed\n * @param allowBasicEnter If true, the callback will be invoked when Enter is pressed without any modifiers\n * @param allowPlatformEnter If true, the callback will be invoked when Enter is pressed with the platform modifier (CMD on Mac, CTRL on Windows)\n * @returns Object with onKeyDown, onCompositionEnd, and onCompositionStart event handlers\n *\n * @example\n * ```tsx\n * const handleSubmit = (event: React.KeyboardEvent) => {\n *  event.preventDefault();\n * // Submit the form\n * };\n * const eventHandlers = useCallbackOnEnter({\n *   callback: handleSubmit,\n *   allowBasicEnter: true,\n *   allowPlatformEnter: true,\n * })\n * return <input {...eventHandlers} />;\n * ```\n */\nexport const useCallbackOnEnter = <T extends Element>({\n  callback,\n  allowBasicEnter,\n  allowPlatformEnter,\n}: {\n  callback: React.KeyboardEventHandler<T>;\n  allowBasicEnter: boolean;\n  allowPlatformEnter: boolean;\n}) => {\n  const isMacOs = useMemo(() => navigator.userAgent.includes('Mac'), []);\n  // Keeping track of whether we are composing characters\n  // This is stored in a ref so that it can be accessed in the onKeyDown event handler\n  // without causing a re-renders\n  const isComposing = useRef(false);\n\n  // Handler for when the composition starts\n  const onCompositionStart: React.CompositionEventHandler<T> = useCallback(() => {\n    isComposing.current = true;\n  }, []);\n\n  // Handler for when the composition ends\n  const onCompositionEnd: React.CompositionEventHandler<T> = useCallback(() => {\n    isComposing.current = false;\n  }, []);\n\n  // Handler for when a key is pressed\n  // Used to submit the form when Enter is pressed\n  const onKeyDown: React.KeyboardEventHandler<T> = useCallback(\n    (event) => {\n      // Only invoke the callback on Enter\n      if (event.key !== 'Enter') return;\n      // Do not submit on Enter if user is composing characters\n      if (isComposing.current) return;\n      // Do not submit on Enter if both are false\n      if (!allowBasicEnter && !allowPlatformEnter) return;\n      // Check if the event is a valid Enter press\n      const basicEnter = allowBasicEnter && !event.metaKey && !event.ctrlKey && !event.shiftKey && !event.altKey;\n      const platformEnter = allowPlatformEnter && (isMacOs ? event.metaKey : event.ctrlKey);\n      const isValidEnterPress = basicEnter || platformEnter;\n      // Submit the form if the Enter press is valid\n      if (isValidEnterPress) callback(event);\n    },\n    [allowBasicEnter, allowPlatformEnter, callback, isMacOs],\n  );\n\n  return { onKeyDown, onCompositionEnd, onCompositionStart };\n};\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport type { Ref } from 'react';\n\nimport type { IconProps } from '../../Icon';\nimport { Icon } from '../../Icon';\nfunction SvgClockIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 16 16\" {...props}>\n      <path fill=\"currentColor\" d=\"M7.25 4v4c0 .199.079.39.22.53l2 2 1.06-1.06-1.78-1.78V4z\" />\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0M1.5 8a6.5 6.5 0 1 1 13 0 6.5 6.5 0 0 1-13 0\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\nconst ClockIcon = forwardRef((props: IconProps, forwardedRef?: Ref<HTMLSpanElement>) => {\n  return <Icon ref={forwardedRef} {...props} component={SvgClockIcon} />;\n});\nClockIcon.displayName = 'ClockIcon';\nexport default ClockIcon;\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport type { Ref } from 'react';\n\nimport type { IconProps } from '../../Icon';\nimport { Icon } from '../../Icon';\nfunction SvgMegaphoneIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 18 18\" {...props}>\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M16.25 2a.75.75 0 0 0-1.248-.56l-4.287 3.81H4A2.75 2.75 0 0 0 1.25 8v2A2.75 2.75 0 0 0 4 12.75h1.75V16a.75.75 0 0 0 1.5 0v-3.25h3.465l4.287 3.81A.75.75 0 0 0 16.25 16zm-4.752 4.56 3.252-2.89v10.66l-3.252-2.89a.75.75 0 0 0-.498-.19H4c-.69 0-1.25-.56-1.25-1.25V8c0-.69.56-1.25 1.25-1.25h7a.75.75 0 0 0 .498-.19\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\nconst MegaphoneIcon = forwardRef((props: IconProps, forwardedRef?: Ref<HTMLSpanElement>) => {\n  return <Icon ref={forwardedRef} {...props} component={SvgMegaphoneIcon} />;\n});\nMegaphoneIcon.displayName = 'MegaphoneIcon';\nexport default MegaphoneIcon;\n","import { css } from '@emotion/react';\nimport { Input as AntDInput } from 'antd';\n\nimport type { InputGroupProps } from './common';\nimport type { Theme } from '../../theme';\nimport { DesignSystemAntDConfigProvider } from '../DesignSystemProvider';\nimport { useDesignSystemTheme } from '../Hooks/useDesignSystemTheme';\nimport { useDesignSystemSafexFlags } from '../utils';\nimport { addDebugOutlineIfEnabled } from '../utils/debug';\n\nconst getInputGroupStyling = (clsPrefix: string, theme: Theme, useNewShadows: boolean) => {\n  const inputClass = `.${clsPrefix}-input`;\n  const buttonClass = `.${clsPrefix}-btn`;\n  return css({\n    display: 'inline-flex !important',\n    width: 'auto',\n    [`& > ${inputClass}`]: {\n      flexGrow: 1,\n      '&:disabled': {\n        border: 'none',\n        background: theme.colors.actionDisabledBackground,\n        '&:hover': {\n          borderRight: `1px solid ${theme.colors.actionDisabledBorder} !important`,\n        },\n      },\n      '&[data-validation]': {\n        marginRight: 0,\n      },\n    },\n\n    ...(useNewShadows && {\n      [`& > ${buttonClass}`]: {\n        boxShadow: 'none !important',\n      },\n    }),\n\n    [`& > ${buttonClass} > span`]: {\n      verticalAlign: 'middle',\n    },\n    [`& > ${buttonClass}:disabled, & > ${buttonClass}:disabled:hover`]: {\n      borderLeft: `1px solid ${theme.colors.actionDisabledBorder} !important`,\n      backgroundColor: `${theme.colors.actionDisabledBackground} !important`,\n      color: `${theme.colors.actionDisabledText} !important`,\n    },\n  });\n};\nexport const Group = ({\n  dangerouslySetAntdProps,\n  dangerouslyAppendEmotionCSS,\n  compact = true,\n  ...props\n}: InputGroupProps) => {\n  const { classNamePrefix, theme } = useDesignSystemTheme();\n  const { useNewShadows } = useDesignSystemSafexFlags();\n\n  return (\n    <DesignSystemAntDConfigProvider>\n      <AntDInput.Group\n        {...addDebugOutlineIfEnabled()}\n        css={[getInputGroupStyling(classNamePrefix, theme, useNewShadows), dangerouslyAppendEmotionCSS]}\n        compact={compact}\n        {...props}\n        {...dangerouslySetAntdProps}\n      />\n    </DesignSystemAntDConfigProvider>\n  );\n};\n","import { useCallback, useRef } from 'react';\n\n/**\n * A React custom hook that allows a callback function to be executed exactly once until it is explicitly reset.\n *\n * Usage:\n *\n * const originalCallback = () => { console.log('originalCallback'); }\n * const { callbackOnceUntilReset, reset } = useCallbackOnceUntilReset(originalCallback);\n *\n * // To execute the callback\n * callbackOnceUntilReset(); // Prints 'originalCallback'\n * callbackOnceUntilReset(); // No effect for further calls\n * reset();\n * callbackOnceUntilReset(); // Prints 'originalCallback' again\n */\nconst useCallbackOnceUntilReset = <T>(callback: () => T) => {\n  const canTriggerRef = useRef(true);\n  const reset = useCallback(() => {\n    canTriggerRef.current = true;\n  }, []);\n\n  const callbackOnceUntilReset = useCallback(() => {\n    if (canTriggerRef.current) {\n      callback();\n      canTriggerRef.current = false;\n    }\n  }, [callback]);\n\n  return { callbackOnceUntilReset, reset };\n};\n\nexport { useCallbackOnceUntilReset };\n","import { useCallback } from 'react';\n\n/**\n * This hook provides a way to chain event handlers together.\n * Optionally, it can stop calling the next handler if the event has been defaultPrevented.\n * @param handlers Array of event handlers to chain together. Optional handlers are allowed for convenience.\n * @param stopOnDefaultPrevented If true, the next handler will not be called if the event has been defaultPrevented\n * @returns A function that will call each handler in the order they are provided\n * @example\n * ```tsx\n * const onClick = useChainEventHandlers({ handlers: [onClick1, onClick2] });\n * return <button onClick={onClick} />;\n */\nexport const useChainEventHandlers = <T extends React.SyntheticEvent<any>>(props: {\n  handlers: Array<React.EventHandler<T> | undefined>;\n  stopOnDefaultPrevented?: boolean;\n}) => {\n  const { handlers, stopOnDefaultPrevented } = props;\n  return useCallback(\n    (event: T) => {\n      // Loop over each handler in succession\n      for (const handler of handlers) {\n        // Break if the event has been defaultPrevented and stopOnDefaultPrevented is true\n        if (stopOnDefaultPrevented && event.defaultPrevented) return;\n        // Call the handler if it exists\n        handler?.(event);\n      }\n    },\n    [handlers, stopOnDefaultPrevented],\n  );\n};\n","import type { CSSObject, SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { Input as AntDInput } from 'antd';\nimport React, { forwardRef, useCallback, useMemo } from 'react';\n\nimport type { InputProps } from './common';\nimport { useFormContext } from '../../development/Form/Form';\nimport type { Theme } from '../../theme';\nimport {\n  DesignSystemEventProviderAnalyticsEventTypes,\n  DesignSystemEventProviderComponentTypes,\n  useDesignSystemEventComponentCallbacks,\n} from '../DesignSystemEventProvider/DesignSystemEventProvider';\nimport { DesignSystemAntDConfigProvider, getAnimationCss } from '../DesignSystemProvider';\nimport { useDesignSystemTheme } from '../Hooks/useDesignSystemTheme';\nimport type { ValidationState } from '../types';\nimport { useDesignSystemSafexFlags } from '../utils';\nimport { getValidationStateColor, importantify } from '../utils/css-utils';\nimport { addDebugOutlineIfEnabled } from '../utils/debug';\nimport { useCallbackOnEnter } from '../utils/useCallbackOnEnter';\nimport { useCallbackOnceUntilReset } from '../utils/useCallbackOnceUntilReset';\nimport { useChainEventHandlers } from '../utils/useChainEventHandlers';\n\ninterface InputStylesOptions {\n  useFocusWithin?: boolean;\n}\n\nexport const getInputStyles = (\n  clsPrefix: string,\n  theme: Theme,\n  {\n    validationState,\n    type,\n    hasValue,\n    useNewShadows,\n  }: { validationState?: ValidationState; type?: string; hasValue?: boolean; useNewShadows?: boolean },\n  { useFocusWithin = false }: InputStylesOptions,\n): CSSObject => {\n  const inputClass = `.${clsPrefix}-input`;\n  const affixClass = `.${clsPrefix}-input-affix-wrapper`;\n  const affixClassDisabled = `.${clsPrefix}-input-affix-wrapper-disabled`;\n  const affixClassFocused = `.${clsPrefix}-input-affix-wrapper-focused`;\n  const clearIcon = `.${clsPrefix}-input-clear-icon`;\n  const prefixIcon = `.${clsPrefix}-input-prefix`;\n  const suffixIcon = `.${clsPrefix}-input-suffix`;\n\n  const validationColor = getValidationStateColor(theme, validationState);\n\n  const focusSpecifier = useFocusWithin ? 'focus-within' : 'focus';\n\n  const styles = {\n    '&&': {\n      lineHeight: theme.typography.lineHeightBase,\n      minHeight: theme.general.heightSm,\n      borderColor: theme.colors.actionDefaultBorderDefault,\n      ...(validationState && { borderColor: validationColor }),\n\n      '&:hover': {\n        borderColor: validationState ? validationColor : theme.colors.actionPrimaryBackgroundHover,\n      },\n\n      [`&:${focusSpecifier}`]: {\n        outlineColor: validationState ? validationColor : theme.colors.actionPrimaryBackgroundDefault,\n        outlineWidth: 2,\n        outlineOffset: -2,\n        outlineStyle: 'solid',\n        ...(!useNewShadows && {\n          boxShadow: 'none',\n        }),\n        borderColor: 'transparent',\n      },\n\n      '&:focus-visible': {\n        outlineColor: validationState ? validationColor : theme.colors.actionPrimaryBackgroundDefault,\n        outlineWidth: 2,\n        outlineOffset: -2,\n        outlineStyle: 'solid',\n        ...(!useNewShadows && {\n          boxShadow: 'none',\n        }),\n        borderColor: 'transparent',\n      },\n    },\n\n    [`&${inputClass}, ${inputClass}`]: {\n      backgroundColor: 'transparent',\n      '&:disabled': {\n        backgroundColor: theme.colors.actionDisabledBackground,\n        color: theme.colors.actionDisabledText,\n        borderColor: theme.colors.actionDisabledBorder,\n      },\n      '&::placeholder': {\n        color: theme.colors.textPlaceholder,\n      },\n    },\n\n    [`&${affixClass}`]: {\n      backgroundColor: 'transparent',\n      lineHeight: theme.typography.lineHeightBase,\n      paddingTop: 5,\n      paddingBottom: 5,\n      minHeight: theme.general.heightSm,\n\n      '::before': {\n        lineHeight: theme.typography.lineHeightBase,\n      },\n\n      '&:hover': {\n        borderColor: validationState ? validationColor : theme.colors.actionPrimaryBackgroundHover,\n      },\n\n      [`input.${clsPrefix}-input`]: {\n        borderRadius: 0,\n      },\n    },\n\n    [`&${affixClassDisabled}`]: {\n      backgroundColor: theme.colors.actionDisabledBackground,\n    },\n\n    [`&${affixClassFocused}`]: {\n      boxShadow: 'none',\n      [`&&, &:${focusSpecifier}`]: {\n        outlineColor: validationState ? validationColor : theme.colors.actionPrimaryBackgroundDefault,\n        outlineWidth: 2,\n        outlineOffset: -2,\n        outlineStyle: 'solid',\n        boxShadow: 'none',\n        borderColor: 'transparent',\n      },\n    },\n\n    [clearIcon]: {\n      fontSize: theme.typography.fontSizeSm,\n    },\n\n    [prefixIcon]: {\n      marginRight: theme.spacing.sm,\n      color: theme.colors.textSecondary,\n    },\n\n    [suffixIcon]: {\n      marginLeft: theme.spacing.sm,\n      color: theme.colors.textSecondary,\n\n      ...(!hasValue &&\n        type === 'number' && {\n          display: 'none',\n        }),\n    },\n\n    ...getAnimationCss(theme.options.enableAnimation),\n  };\n\n  return styles;\n};\n\nexport const getInputEmotionStyles = (\n  clsPrefix: string,\n  theme: Theme,\n  {\n    validationState,\n    type,\n    hasValue,\n    useNewShadows,\n  }: { validationState?: ValidationState; type?: string; hasValue?: boolean; useNewShadows: boolean },\n): SerializedStyles => {\n  const styles = getInputStyles(clsPrefix, theme, { validationState, type, hasValue, useNewShadows }, {});\n  return css(importantify(styles));\n};\n\nexport const Input = forwardRef<AntDInput, InputProps>(function Input(\n  {\n    validationState,\n    autoComplete = 'off',\n    dangerouslySetAntdProps,\n    dangerouslyAppendEmotionCSS,\n    onChange,\n    onClear,\n    onFocus,\n    onPressEnter,\n    onCompositionStart,\n    onCompositionEnd,\n    componentId,\n    analyticsEvents = [DesignSystemEventProviderAnalyticsEventTypes.OnValueChange],\n    ...props\n  },\n  ref,\n) {\n  const formContext = useFormContext();\n  const { classNamePrefix, theme } = useDesignSystemTheme();\n  const [hasValue, setHasValue] = React.useState(\n    props.value !== undefined && props.value !== null && props.value !== '',\n  );\n\n  const { useNewShadows } = useDesignSystemSafexFlags();\n  const memoizedAnalyticsEvents = useMemo(() => analyticsEvents, [analyticsEvents]);\n  const eventContext = useDesignSystemEventComponentCallbacks({\n    componentType: DesignSystemEventProviderComponentTypes.Input,\n    componentId,\n    analyticsEvents: memoizedAnalyticsEvents,\n    valueHasNoPii: false,\n  });\n\n  // Prevents multiple onValueChange triggers until after a focus event resets it.\n  const { callbackOnceUntilReset: sendAnalyticsEventOncePerFocus, reset: resetSendAnalyticsEventOnFocus } =\n    useCallbackOnceUntilReset(eventContext.onValueChange);\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      sendAnalyticsEventOncePerFocus();\n      // If the input is cleared, call the onClear handler, but only\n      // if the event is not an input event -- which is the case when you click the\n      // ant-provided (X) button.\n      if (!e.target.value && e.nativeEvent instanceof InputEvent === false && onClear) {\n        onClear?.();\n        setHasValue(false);\n      } else {\n        onChange?.(e);\n        setHasValue(Boolean(e.target.value));\n      }\n    },\n    [onChange, onClear, sendAnalyticsEventOncePerFocus],\n  );\n\n  const handleFocus = useCallback(\n    (e: React.FocusEvent<HTMLInputElement>) => {\n      resetSendAnalyticsEventOnFocus();\n      onFocus?.(e);\n    },\n    [onFocus, resetSendAnalyticsEventOnFocus],\n  );\n\n  const onFormSubmit = useCallback(\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\n      if (!formContext.formRef?.current) return;\n      e.preventDefault();\n      formContext.formRef.current.requestSubmit();\n    },\n    [formContext.formRef],\n  );\n\n  const submitHandlers = useCallbackOnEnter<HTMLInputElement>({\n    callback: onFormSubmit,\n    allowBasicEnter: true,\n    allowPlatformEnter: true,\n  });\n\n  const onPressEnterChain = useChainEventHandlers(\n    useMemo(\n      () => ({ handlers: [submitHandlers.onKeyDown, onPressEnter], stopOnDefaultPrevented: false }),\n      [submitHandlers.onKeyDown, onPressEnter],\n    ),\n  );\n\n  const onCompositionStartChain = useChainEventHandlers(\n    useMemo(\n      () => ({ handlers: [submitHandlers.onCompositionStart, onCompositionStart] }),\n      [submitHandlers.onCompositionStart, onCompositionStart],\n    ),\n  );\n\n  const onCompositionEndChain = useChainEventHandlers(\n    useMemo(\n      () => ({ handlers: [submitHandlers.onCompositionEnd, onCompositionEnd] }),\n      [submitHandlers.onCompositionEnd, onCompositionEnd],\n    ),\n  );\n\n  return (\n    <DesignSystemAntDConfigProvider>\n      <AntDInput\n        {...addDebugOutlineIfEnabled()}\n        autoComplete={autoComplete}\n        data-validation={validationState}\n        ref={ref}\n        css={[\n          getInputEmotionStyles(classNamePrefix, theme, { validationState, type: props.type, hasValue, useNewShadows }),\n          dangerouslyAppendEmotionCSS,\n        ]}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onPressEnter={onPressEnterChain}\n        onCompositionStart={onCompositionStartChain}\n        onCompositionEnd={onCompositionEndChain}\n        {...props}\n        {...dangerouslySetAntdProps}\n        data-component-type={DesignSystemEventProviderComponentTypes.Input}\n        data-component-id={componentId}\n      />\n    </DesignSystemAntDConfigProvider>\n  );\n});\n","import { Input as AntDInput } from 'antd';\nimport React, { forwardRef } from 'react';\n\nimport { getInputEmotionStyles } from './Input';\nimport type { PasswordProps } from './common';\nimport { DesignSystemAntDConfigProvider } from '../DesignSystemProvider';\nimport { useDesignSystemTheme } from '../Hooks/useDesignSystemTheme';\nimport { useDesignSystemSafexFlags } from '../utils';\nimport { addDebugOutlineIfEnabled } from '../utils/debug';\n\nexport const Password: React.FC<PasswordProps> = forwardRef<AntDInput, PasswordProps>(function Password(\n  { validationState, autoComplete = 'off', dangerouslySetAntdProps, dangerouslyAppendEmotionCSS, ...props },\n  ref,\n) {\n  const { classNamePrefix, theme } = useDesignSystemTheme();\n  const { useNewShadows } = useDesignSystemSafexFlags();\n\n  return (\n    <DesignSystemAntDConfigProvider>\n      <AntDInput.Password\n        {...addDebugOutlineIfEnabled()}\n        visibilityToggle={false}\n        ref={ref}\n        autoComplete={autoComplete}\n        css={[\n          getInputEmotionStyles(classNamePrefix, theme, { validationState, useNewShadows }),\n          dangerouslyAppendEmotionCSS,\n        ]}\n        {...props}\n        {...dangerouslySetAntdProps}\n      />\n    </DesignSystemAntDConfigProvider>\n  );\n});\n","import { Input as AntDInput } from 'antd';\nimport type { TextAreaRef } from 'antd/lib/input/TextArea';\nimport { forwardRef, useCallback, useMemo } from 'react';\n\nimport { getInputEmotionStyles } from './Input';\nimport type { TextAreaProps } from './common';\nimport { useFormContext } from '../../development/Form';\nimport {\n  DesignSystemEventProviderAnalyticsEventTypes,\n  DesignSystemEventProviderComponentTypes,\n  useDesignSystemEventComponentCallbacks,\n} from '../DesignSystemEventProvider/DesignSystemEventProvider';\nimport { DesignSystemAntDConfigProvider } from '../DesignSystemProvider';\nimport { useDesignSystemTheme } from '../Hooks/useDesignSystemTheme';\nimport { useDesignSystemSafexFlags } from '../utils';\nimport { addDebugOutlineIfEnabled } from '../utils/debug';\nimport { useCallbackOnEnter } from '../utils/useCallbackOnEnter';\nimport { useCallbackOnceUntilReset } from '../utils/useCallbackOnceUntilReset';\nimport { useChainEventHandlers } from '../utils/useChainEventHandlers';\n\nexport const TextArea = forwardRef<TextAreaRef, TextAreaProps>(function TextArea(\n  {\n    validationState,\n    autoComplete = 'off',\n    dangerouslySetAntdProps,\n    dangerouslyAppendEmotionCSS,\n    componentId,\n    analyticsEvents = [DesignSystemEventProviderAnalyticsEventTypes.OnValueChange],\n    onChange,\n    onFocus,\n    onKeyDown,\n    onCompositionStart,\n    onCompositionEnd,\n    allowFormSubmitOnEnter = false,\n    ...props\n  },\n  ref,\n) {\n  const formContext = useFormContext();\n  const { classNamePrefix, theme } = useDesignSystemTheme();\n  const { useNewShadows } = useDesignSystemSafexFlags();\n  const memoizedAnalyticsEvents = useMemo(() => analyticsEvents, [analyticsEvents]);\n  const eventContext = useDesignSystemEventComponentCallbacks({\n    componentType: DesignSystemEventProviderComponentTypes.TextArea,\n    componentId,\n    analyticsEvents: memoizedAnalyticsEvents,\n    valueHasNoPii: false,\n  });\n\n  // Prevents multiple onValueChange triggers until after a focus event resets it.\n  const { callbackOnceUntilReset: sendAnalyticsEventOncePerFocus, reset: resetSendAnalyticsEventOnFocus } =\n    useCallbackOnceUntilReset(eventContext.onValueChange);\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      sendAnalyticsEventOncePerFocus();\n      onChange?.(e);\n    },\n    [onChange, sendAnalyticsEventOncePerFocus],\n  );\n\n  const handleFocus = useCallback(\n    (e: React.FocusEvent<HTMLTextAreaElement>) => {\n      resetSendAnalyticsEventOnFocus();\n      onFocus?.(e);\n    },\n    [onFocus, resetSendAnalyticsEventOnFocus],\n  );\n\n  // Callback used to submit the parent form\n  // This is used when allowFormSubmitOnEnter is true\n  const handleSubmitForm = useCallback(\n    (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      if (!formContext.formRef?.current) return;\n\n      event.preventDefault();\n      formContext.formRef.current.requestSubmit();\n    },\n    [formContext.formRef],\n  );\n  // Event handlers for submitting the form on Enter\n  // This hook takes meta keys into account for platform-specific behavior\n  const submitHandlers = useCallbackOnEnter({\n    callback: handleSubmitForm,\n    allowBasicEnter: allowFormSubmitOnEnter, // Conditionally allow form submission on Enter\n    allowPlatformEnter: true, // Always allow form submission on platform Enter\n  });\n\n  // Chains the event handlers from useCallbackOnEnter together with potential event handlers from props\n  const onKeyDownChain = useChainEventHandlers(\n    useMemo(\n      () => ({\n        handlers: [submitHandlers.onKeyDown, onKeyDown],\n        stopOnDefaultPrevented: true, // If the form is submitted, do not call the next handler\n      }),\n      [onKeyDown, submitHandlers.onKeyDown],\n    ),\n  );\n  const onCompositionStartChain = useChainEventHandlers(\n    useMemo(\n      () => ({ handlers: [submitHandlers.onCompositionStart, onCompositionStart] }),\n      [submitHandlers.onCompositionStart, onCompositionStart],\n    ),\n  );\n  const onCompositionEndChain = useChainEventHandlers(\n    useMemo(\n      () => ({ handlers: [submitHandlers.onCompositionEnd, onCompositionEnd] }),\n      [submitHandlers.onCompositionEnd, onCompositionEnd],\n    ),\n  );\n\n  return (\n    <DesignSystemAntDConfigProvider>\n      <AntDInput.TextArea\n        {...addDebugOutlineIfEnabled()}\n        ref={ref}\n        autoComplete={autoComplete}\n        css={[\n          getInputEmotionStyles(classNamePrefix, theme, { validationState, useNewShadows }),\n          dangerouslyAppendEmotionCSS,\n        ]}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onKeyDown={onKeyDownChain}\n        onCompositionStart={onCompositionStartChain}\n        onCompositionEnd={onCompositionEndChain}\n        data-component-type={DesignSystemEventProviderComponentTypes.TextArea}\n        data-component-id={componentId}\n        {...props}\n        {...dangerouslySetAntdProps}\n      />\n    </DesignSystemAntDConfigProvider>\n  );\n});\n","import { Group } from './Group';\nimport { Input as OriginalInput, getInputStyles } from './Input';\nimport { Password } from './Password';\nimport { TextArea } from './TextArea';\n\nexport * from './common';\n\n// Properly creates the namespace and dot-notation components with correct types.\nconst InputNamespace = /* #__PURE__ */ Object.assign(OriginalInput, { TextArea, Password, Group });\n\nconst Input = InputNamespace;\n\nexport { Input, getInputStyles };\n"],"names":["useCallbackOnEnter","_ref","callback","allowBasicEnter","allowPlatformEnter","isMacOs","useMemo","navigator","userAgent","includes","isComposing","useRef","onCompositionStart","useCallback","current","onCompositionEnd","onKeyDown","event","key","basicEnter","metaKey","ctrlKey","shiftKey","altKey","platformEnter","isValidEnterPress","SvgClockIcon","props","_jsxs","xmlns","width","height","fill","viewBox","children","_jsx","d","fillRule","clipRule","ClockIcon","forwardRef","forwardedRef","Icon","ref","component","displayName","SvgMegaphoneIcon","MegaphoneIcon","getInputGroupStyling","clsPrefix","theme","useNewShadows","inputClass","buttonClass","css","display","flexGrow","border","background","colors","actionDisabledBackground","borderRight","actionDisabledBorder","marginRight","boxShadow","verticalAlign","borderLeft","backgroundColor","color","actionDisabledText","process","env","NODE_ENV","Group","dangerouslySetAntdProps","dangerouslyAppendEmotionCSS","compact","classNamePrefix","useDesignSystemTheme","useDesignSystemSafexFlags","DesignSystemAntDConfigProvider","AntDInput","addDebugOutlineIfEnabled","useCallbackOnceUntilReset","canTriggerRef","reset","callbackOnceUntilReset","useChainEventHandlers","handlers","stopOnDefaultPrevented","handler","defaultPrevented","getInputStyles","_ref2","validationState","type","hasValue","useFocusWithin","affixClass","affixClassDisabled","affixClassFocused","clearIcon","prefixIcon","suffixIcon","validationColor","getValidationStateColor","focusSpecifier","styles","lineHeight","typography","lineHeightBase","minHeight","general","heightSm","borderColor","actionDefaultBorderDefault","actionPrimaryBackgroundHover","outlineColor","actionPrimaryBackgroundDefault","outlineWidth","outlineOffset","outlineStyle","textPlaceholder","paddingTop","paddingBottom","borderRadius","fontSize","fontSizeSm","spacing","sm","textSecondary","marginLeft","getAnimationCss","options","enableAnimation","getInputEmotionStyles","_ref3","importantify","Input","_ref4","autoComplete","onChange","onClear","onFocus","onPressEnter","componentId","analyticsEvents","DesignSystemEventProviderAnalyticsEventTypes","OnValueChange","formContext","useFormContext","setHasValue","React","useState","value","undefined","memoizedAnalyticsEvents","eventContext","useDesignSystemEventComponentCallbacks","componentType","DesignSystemEventProviderComponentTypes","valueHasNoPii","sendAnalyticsEventOncePerFocus","resetSendAnalyticsEventOnFocus","onValueChange","handleChange","e","target","nativeEvent","InputEvent","Boolean","handleFocus","onFormSubmit","_formContext$formRef","formRef","preventDefault","requestSubmit","submitHandlers","onPressEnterChain","onCompositionStartChain","onCompositionEndChain","Password","visibilityToggle","TextArea","allowFormSubmitOnEnter","handleSubmitForm","onKeyDownChain","InputNamespace","Object","assign","OriginalInput"],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACaA,MAAAA,kBAAkB,GAAGC,IAAA,IAQ5B;EAAA,IARgD;IACpDC,QAAQ;IACRC,eAAe;AACfC,IAAAA,kBAAAA;AAKF,GAAC,GAAAH,IAAA,CAAA;AACC,EAAA,MAAMI,OAAO,GAAGC,OAAO,CAAC,MAAMC,SAAS,CAACC,SAAS,CAACC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAA;AACtE;AACA;AACA;AACA,EAAA,MAAMC,WAAW,GAAGC,MAAM,CAAC,KAAK,CAAC,CAAA;;AAEjC;AACA,EAAA,MAAMC,kBAAoD,GAAGC,WAAW,CAAC,MAAM;IAC7EH,WAAW,CAACI,OAAO,GAAG,IAAI,CAAA;GAC3B,EAAE,EAAE,CAAC,CAAA;;AAEN;AACA,EAAA,MAAMC,gBAAkD,GAAGF,WAAW,CAAC,MAAM;IAC3EH,WAAW,CAACI,OAAO,GAAG,KAAK,CAAA;GAC5B,EAAE,EAAE,CAAC,CAAA;;AAEN;AACA;AACA,EAAA,MAAME,SAAwC,GAAGH,WAAW,CACzDI,KAAK,IAAK;AACT;AACA,IAAA,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE,OAAA;AAC3B;IACA,IAAIR,WAAW,CAACI,OAAO,EAAE,OAAA;AACzB;AACA,IAAA,IAAI,CAACX,eAAe,IAAI,CAACC,kBAAkB,EAAE,OAAA;AAC7C;IACA,MAAMe,UAAU,GAAGhB,eAAe,IAAI,CAACc,KAAK,CAACG,OAAO,IAAI,CAACH,KAAK,CAACI,OAAO,IAAI,CAACJ,KAAK,CAACK,QAAQ,IAAI,CAACL,KAAK,CAACM,MAAM,CAAA;AAC1G,IAAA,MAAMC,aAAa,GAAGpB,kBAAkB,KAAKC,OAAO,GAAGY,KAAK,CAACG,OAAO,GAAGH,KAAK,CAACI,OAAO,CAAC,CAAA;AACrF,IAAA,MAAMI,iBAAiB,GAAGN,UAAU,IAAIK,aAAa,CAAA;AACrD;AACA,IAAA,IAAIC,iBAAiB,EAAEvB,QAAQ,CAACe,KAAK,CAAC,CAAA;GACvC,EACD,CAACd,eAAe,EAAEC,kBAAkB,EAAEF,QAAQ,EAAEG,OAAO,CACzD,CAAC,CAAA;EAED,OAAO;IAAEW,SAAS;IAAED,gBAAgB;AAAEH,IAAAA,kBAAAA;GAAoB,CAAA;AAC5D;;ACrEA,SAASc,YAAYA,CAACC,KAAoC,EAAE;AAC1D,EAAA,OACEC,IAAA,CAAA,KAAA,EAAA;AAAKC,IAAAA,KAAK,EAAC,4BAA4B;AAACC,IAAAA,KAAK,EAAC,KAAK;AAACC,IAAAA,MAAM,EAAC,KAAK;AAACC,IAAAA,IAAI,EAAC,MAAM;AAACC,IAAAA,OAAO,EAAC,WAAW;AAAA,IAAA,GAAKN,KAAK;AAAAO,IAAAA,QAAA,GACxGC,GAAA,CAAA,MAAA,EAAA;AAAMH,MAAAA,IAAI,EAAC,cAAc;AAACI,MAAAA,CAAC,EAAC,0DAAA;KAA4D,CAAC,EACzFD,GAAA,CAAA,MAAA,EAAA;AACEH,MAAAA,IAAI,EAAC,cAAc;AACnBK,MAAAA,QAAQ,EAAC,SAAS;AAClBD,MAAAA,CAAC,EAAC,+EAA+E;AACjFE,MAAAA,QAAQ,EAAC,SAAA;AAAS,KACnB,CAAC,CAAA;AAAA,GACC,CAAC,CAAA;AAEV,CAAA;AACMC,MAAAA,SAAS,gBAAGC,UAAU,CAAC,CAACb,KAAgB,EAAEc,YAAmC,KAAK;EACtF,OAAON,GAAA,CAACO,IAAI,EAAA;AAACC,IAAAA,GAAG,EAAEF,YAAa;AAAA,IAAA,GAAKd,KAAK;AAAEiB,IAAAA,SAAS,EAAElB,YAAAA;AAAa,GAAE,CAAC,CAAA;AACxE,CAAC,EAAC;AACFa,SAAS,CAACM,WAAW,GAAG,WAAW;;AChBnC,SAASC,gBAAgBA,CAACnB,KAAoC,EAAE;AAC9D,EAAA,OACEQ,GAAA,CAAA,KAAA,EAAA;AAAKN,IAAAA,KAAK,EAAC,4BAA4B;AAACC,IAAAA,KAAK,EAAC,KAAK;AAACC,IAAAA,MAAM,EAAC,KAAK;AAACC,IAAAA,IAAI,EAAC,MAAM;AAACC,IAAAA,OAAO,EAAC,WAAW;AAAA,IAAA,GAAKN,KAAK;AAAAO,IAAAA,QAAA,EACxGC,GAAA,CAAA,MAAA,EAAA;AACEH,MAAAA,IAAI,EAAC,cAAc;AACnBK,MAAAA,QAAQ,EAAC,SAAS;AAClBD,MAAAA,CAAC,EAAC,sTAAsT;AACxTE,MAAAA,QAAQ,EAAC,SAAA;KACV,CAAA;AAAC,GACC,CAAC,CAAA;AAEV,CAAA;AACMS,MAAAA,aAAa,gBAAGP,UAAU,CAAC,CAACb,KAAgB,EAAEc,YAAmC,KAAK;EAC1F,OAAON,GAAA,CAACO,IAAI,EAAA;AAACC,IAAAA,GAAG,EAAEF,YAAa;AAAA,IAAA,GAAKd,KAAK;AAAEiB,IAAAA,SAAS,EAAEE,gBAAAA;AAAiB,GAAE,CAAC,CAAA;AAC5E,CAAC,EAAC;AACFC,aAAa,CAACF,WAAW,GAAG,eAAe;;ACX3C,MAAMG,oBAAoB,GAAGA,CAACC,SAAiB,EAAEC,KAAY,EAAEC,aAAsB,KAAK;AACxF,EAAA,MAAMC,UAAU,GAAG,CAAIH,CAAAA,EAAAA,SAAS,CAAQ,MAAA,CAAA,CAAA;AACxC,EAAA,MAAMI,WAAW,GAAG,CAAIJ,CAAAA,EAAAA,SAAS,CAAM,IAAA,CAAA,CAAA;AACvC,EAAA,oBAAOK,GAAG,CAAC;AACTC,IAAAA,OAAO,EAAE,wBAAwB;AACjCzB,IAAAA,KAAK,EAAE,MAAM;IACb,CAAC,CAAA,IAAA,EAAOsB,UAAU,CAAA,CAAE,GAAG;AACrBI,MAAAA,QAAQ,EAAE,CAAC;AACX,MAAA,YAAY,EAAE;AACZC,QAAAA,MAAM,EAAE,MAAM;AACdC,QAAAA,UAAU,EAAER,KAAK,CAACS,MAAM,CAACC,wBAAwB;AACjD,QAAA,SAAS,EAAE;AACTC,UAAAA,WAAW,EAAE,CAAaX,UAAAA,EAAAA,KAAK,CAACS,MAAM,CAACG,oBAAoB,CAAA,WAAA,CAAA;AAC7D,SAAA;OACD;AACD,MAAA,oBAAoB,EAAE;AACpBC,QAAAA,WAAW,EAAE,CAAA;AACf,OAAA;KACD;AAED,IAAA,IAAIZ,aAAa,IAAI;MACnB,CAAC,CAAA,IAAA,EAAOE,WAAW,CAAA,CAAE,GAAG;AACtBW,QAAAA,SAAS,EAAE,iBAAA;AACb,OAAA;AACF,KAAC,CAAC;IAEF,CAAC,CAAA,IAAA,EAAOX,WAAW,CAAA,OAAA,CAAS,GAAG;AAC7BY,MAAAA,aAAa,EAAE,QAAA;KAChB;AACD,IAAA,CAAC,CAAOZ,IAAAA,EAAAA,WAAW,CAAkBA,eAAAA,EAAAA,WAAW,iBAAiB,GAAG;AAClEa,MAAAA,UAAU,EAAE,CAAahB,UAAAA,EAAAA,KAAK,CAACS,MAAM,CAACG,oBAAoB,CAAa,WAAA,CAAA;AACvEK,MAAAA,eAAe,EAAE,CAAGjB,EAAAA,KAAK,CAACS,MAAM,CAACC,wBAAwB,CAAa,WAAA,CAAA;AACtEQ,MAAAA,KAAK,EAAE,CAAGlB,EAAAA,KAAK,CAACS,MAAM,CAACU,kBAAkB,CAAA,WAAA,CAAA;AAC3C,KAAA;AACF,GAAC,EAAAC,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,8BAAA,CAAA,CAAA;AACJ,CAAC,CAAA;AACM,MAAMC,KAAK,GAAGxE,IAAA,IAKE;EAAA,IALD;IACpByE,uBAAuB;IACvBC,2BAA2B;AAC3BC,IAAAA,OAAO,GAAG,IAAI;IACd,GAAGjD,KAAAA;AACY,GAAC,GAAA1B,IAAA,CAAA;EAChB,MAAM;IAAE4E,eAAe;AAAE3B,IAAAA,KAAAA;GAAO,GAAG4B,oBAAoB,EAAE,CAAA;EACzD,MAAM;AAAE3B,IAAAA,aAAAA;GAAe,GAAG4B,yBAAyB,EAAE,CAAA;EAErD,OACE5C,GAAA,CAAC6C,8BAA8B,EAAA;AAAA9C,IAAAA,QAAA,EAC7BC,GAAA,CAAC8C,OAAS,CAACR,KAAK,EAAA;MAAA,GACVS,wBAAwB,EAAE;AAC9B5B,MAAAA,GAAG,GAAGN,oBAAoB,CAAC6B,eAAe,EAAE3B,KAAK,EAAEC,aAAa,CAAC,EAAEwB,2BAA2B,EAAAL,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAE,YAAA,GAAA,EAAA,GAAA,eAAA,CAAA;AAChGI,MAAAA,OAAO,EAAEA,OAAQ;AAAA,MAAA,GACbjD,KAAK;MAAA,GACL+C,uBAAAA;KACL,CAAA;AAAC,GAC4B,CAAC,CAAA;AAErC,CAAC;;AChED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMS,yBAAyB,GAAOjF,QAAiB,IAAK;AAC1D,EAAA,MAAMkF,aAAa,GAAGzE,MAAM,CAAC,IAAI,CAAC,CAAA;AAClC,EAAA,MAAM0E,KAAK,GAAGxE,WAAW,CAAC,MAAM;IAC9BuE,aAAa,CAACtE,OAAO,GAAG,IAAI,CAAA;GAC7B,EAAE,EAAE,CAAC,CAAA;AAEN,EAAA,MAAMwE,sBAAsB,GAAGzE,WAAW,CAAC,MAAM;IAC/C,IAAIuE,aAAa,CAACtE,OAAO,EAAE;AACzBZ,MAAAA,QAAQ,EAAE,CAAA;MACVkF,aAAa,CAACtE,OAAO,GAAG,KAAK,CAAA;AAC/B,KAAA;AACF,GAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC,CAAA;EAEd,OAAO;IAAEoF,sBAAsB;AAAED,IAAAA,KAAAA;GAAO,CAAA;AAC1C,CAAC;;AC5BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAME,qBAAqB,GAAyC5D,KAG1E,IAAK;EACJ,MAAM;IAAE6D,QAAQ;AAAEC,IAAAA,sBAAAA;AAAuB,GAAC,GAAG9D,KAAK,CAAA;EAClD,OAAOd,WAAW,CACfI,KAAQ,IAAK;AACZ;AACA,IAAA,KAAK,MAAMyE,OAAO,IAAIF,QAAQ,EAAE;AAC9B;AACA,MAAA,IAAIC,sBAAsB,IAAIxE,KAAK,CAAC0E,gBAAgB,EAAE,OAAA;AACtD;AACAD,MAAAA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,IAAPA,OAAO,CAAGzE,KAAK,CAAC,CAAA;AAClB,KAAA;AACF,GAAC,EACD,CAACuE,QAAQ,EAAEC,sBAAsB,CACnC,CAAC,CAAA;AACH,CAAC;;ACHM,MAAMG,cAAc,GAAGA,CAC5B3C,SAAiB,EACjBC,KAAY,EAAAjD,IAAA,EAAA4F,KAAA,KAQE;EAAA,IAPd;IACEC,eAAe;IACfC,IAAI;IACJC,QAAQ;AACR7C,IAAAA,aAAAA;AACiG,GAAC,GAAAlD,IAAA,CAAA;EAAA,IACpG;AAAEgG,IAAAA,cAAc,GAAG,KAAA;AAA0B,GAAC,GAAAJ,KAAA,CAAA;AAE9C,EAAA,MAAMzC,UAAU,GAAG,CAAIH,CAAAA,EAAAA,SAAS,CAAQ,MAAA,CAAA,CAAA;AACxC,EAAA,MAAMiD,UAAU,GAAG,CAAIjD,CAAAA,EAAAA,SAAS,CAAsB,oBAAA,CAAA,CAAA;AACtD,EAAA,MAAMkD,kBAAkB,GAAG,CAAIlD,CAAAA,EAAAA,SAAS,CAA+B,6BAAA,CAAA,CAAA;AACvE,EAAA,MAAMmD,iBAAiB,GAAG,CAAInD,CAAAA,EAAAA,SAAS,CAA8B,4BAAA,CAAA,CAAA;AACrE,EAAA,MAAMoD,SAAS,GAAG,CAAIpD,CAAAA,EAAAA,SAAS,CAAmB,iBAAA,CAAA,CAAA;AAClD,EAAA,MAAMqD,UAAU,GAAG,CAAIrD,CAAAA,EAAAA,SAAS,CAAe,aAAA,CAAA,CAAA;AAC/C,EAAA,MAAMsD,UAAU,GAAG,CAAItD,CAAAA,EAAAA,SAAS,CAAe,aAAA,CAAA,CAAA;AAE/C,EAAA,MAAMuD,eAAe,GAAGC,uBAAuB,CAACvD,KAAK,EAAE4C,eAAe,CAAC,CAAA;AAEvE,EAAA,MAAMY,cAAc,GAAGT,cAAc,GAAG,cAAc,GAAG,OAAO,CAAA;AAEhE,EAAA,MAAMU,MAAM,GAAG;AACb,IAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAE1D,KAAK,CAAC2D,UAAU,CAACC,cAAc;AAC3CC,MAAAA,SAAS,EAAE7D,KAAK,CAAC8D,OAAO,CAACC,QAAQ;AACjCC,MAAAA,WAAW,EAAEhE,KAAK,CAACS,MAAM,CAACwD,0BAA0B;AACpD,MAAA,IAAIrB,eAAe,IAAI;AAAEoB,QAAAA,WAAW,EAAEV,eAAAA;AAAgB,OAAC,CAAC;AAExD,MAAA,SAAS,EAAE;QACTU,WAAW,EAAEpB,eAAe,GAAGU,eAAe,GAAGtD,KAAK,CAACS,MAAM,CAACyD,4BAAAA;OAC/D;MAED,CAAC,CAAA,EAAA,EAAKV,cAAc,CAAA,CAAE,GAAG;QACvBW,YAAY,EAAEvB,eAAe,GAAGU,eAAe,GAAGtD,KAAK,CAACS,MAAM,CAAC2D,8BAA8B;AAC7FC,QAAAA,YAAY,EAAE,CAAC;QACfC,aAAa,EAAE,CAAC,CAAC;AACjBC,QAAAA,YAAY,EAAE,OAAO;QACrB,IAAI,CAACtE,aAAa,IAAI;AACpBa,UAAAA,SAAS,EAAE,MAAA;AACb,SAAC,CAAC;AACFkD,QAAAA,WAAW,EAAE,aAAA;OACd;AAED,MAAA,iBAAiB,EAAE;QACjBG,YAAY,EAAEvB,eAAe,GAAGU,eAAe,GAAGtD,KAAK,CAACS,MAAM,CAAC2D,8BAA8B;AAC7FC,QAAAA,YAAY,EAAE,CAAC;QACfC,aAAa,EAAE,CAAC,CAAC;AACjBC,QAAAA,YAAY,EAAE,OAAO;QACrB,IAAI,CAACtE,aAAa,IAAI;AACpBa,UAAAA,SAAS,EAAE,MAAA;AACb,SAAC,CAAC;AACFkD,QAAAA,WAAW,EAAE,aAAA;AACf,OAAA;KACD;AAED,IAAA,CAAC,CAAI9D,CAAAA,EAAAA,UAAU,CAAKA,EAAAA,EAAAA,UAAU,EAAE,GAAG;AACjCe,MAAAA,eAAe,EAAE,aAAa;AAC9B,MAAA,YAAY,EAAE;AACZA,QAAAA,eAAe,EAAEjB,KAAK,CAACS,MAAM,CAACC,wBAAwB;AACtDQ,QAAAA,KAAK,EAAElB,KAAK,CAACS,MAAM,CAACU,kBAAkB;AACtC6C,QAAAA,WAAW,EAAEhE,KAAK,CAACS,MAAM,CAACG,oBAAAA;OAC3B;AACD,MAAA,gBAAgB,EAAE;AAChBM,QAAAA,KAAK,EAAElB,KAAK,CAACS,MAAM,CAAC+D,eAAAA;AACtB,OAAA;KACD;IAED,CAAC,CAAA,CAAA,EAAIxB,UAAU,CAAA,CAAE,GAAG;AAClB/B,MAAAA,eAAe,EAAE,aAAa;AAC9ByC,MAAAA,UAAU,EAAE1D,KAAK,CAAC2D,UAAU,CAACC,cAAc;AAC3Ca,MAAAA,UAAU,EAAE,CAAC;AACbC,MAAAA,aAAa,EAAE,CAAC;AAChBb,MAAAA,SAAS,EAAE7D,KAAK,CAAC8D,OAAO,CAACC,QAAQ;AAEjC,MAAA,UAAU,EAAE;AACVL,QAAAA,UAAU,EAAE1D,KAAK,CAAC2D,UAAU,CAACC,cAAAA;OAC9B;AAED,MAAA,SAAS,EAAE;QACTI,WAAW,EAAEpB,eAAe,GAAGU,eAAe,GAAGtD,KAAK,CAACS,MAAM,CAACyD,4BAAAA;OAC/D;MAED,CAAC,CAAA,MAAA,EAASnE,SAAS,CAAA,MAAA,CAAQ,GAAG;AAC5B4E,QAAAA,YAAY,EAAE,CAAA;AAChB,OAAA;KACD;IAED,CAAC,CAAA,CAAA,EAAI1B,kBAAkB,CAAA,CAAE,GAAG;AAC1BhC,MAAAA,eAAe,EAAEjB,KAAK,CAACS,MAAM,CAACC,wBAAAA;KAC/B;IAED,CAAC,CAAA,CAAA,EAAIwC,iBAAiB,CAAA,CAAE,GAAG;AACzBpC,MAAAA,SAAS,EAAE,MAAM;MACjB,CAAC,CAAA,MAAA,EAAS0C,cAAc,CAAA,CAAE,GAAG;QAC3BW,YAAY,EAAEvB,eAAe,GAAGU,eAAe,GAAGtD,KAAK,CAACS,MAAM,CAAC2D,8BAA8B;AAC7FC,QAAAA,YAAY,EAAE,CAAC;QACfC,aAAa,EAAE,CAAC,CAAC;AACjBC,QAAAA,YAAY,EAAE,OAAO;AACrBzD,QAAAA,SAAS,EAAE,MAAM;AACjBkD,QAAAA,WAAW,EAAE,aAAA;AACf,OAAA;KACD;AAED,IAAA,CAACb,SAAS,GAAG;AACXyB,MAAAA,QAAQ,EAAE5E,KAAK,CAAC2D,UAAU,CAACkB,UAAAA;KAC5B;AAED,IAAA,CAACzB,UAAU,GAAG;AACZvC,MAAAA,WAAW,EAAEb,KAAK,CAAC8E,OAAO,CAACC,EAAE;AAC7B7D,MAAAA,KAAK,EAAElB,KAAK,CAACS,MAAM,CAACuE,aAAAA;KACrB;AAED,IAAA,CAAC3B,UAAU,GAAG;AACZ4B,MAAAA,UAAU,EAAEjF,KAAK,CAAC8E,OAAO,CAACC,EAAE;AAC5B7D,MAAAA,KAAK,EAAElB,KAAK,CAACS,MAAM,CAACuE,aAAa;AAEjC,MAAA,IAAI,CAAClC,QAAQ,IACXD,IAAI,KAAK,QAAQ,IAAI;AACnBxC,QAAAA,OAAO,EAAE,MAAA;OACV,CAAA;KACJ;AAED,IAAA,GAAG6E,eAAe,CAAClF,KAAK,CAACmF,OAAO,CAACC,eAAe,CAAA;GACjD,CAAA;AAED,EAAA,OAAO3B,MAAM,CAAA;AACf,EAAC;AAEM,MAAM4B,qBAAqB,GAAGA,CACnCtF,SAAiB,EACjBC,KAAY,EAAAsF,KAAA,KAOS;EAAA,IANrB;IACE1C,eAAe;IACfC,IAAI;IACJC,QAAQ;AACR7C,IAAAA,aAAAA;AACgG,GAAC,GAAAqF,KAAA,CAAA;AAEnG,EAAA,MAAM7B,MAAM,GAAGf,cAAc,CAAC3C,SAAS,EAAEC,KAAK,EAAE;IAAE4C,eAAe;IAAEC,IAAI;IAAEC,QAAQ;AAAE7C,IAAAA,aAAAA;GAAe,EAAE,EAAE,CAAC,CAAA;AACvG,EAAA,oBAAOG,GAAG,CAACmF,YAAY,CAAC9B,MAAM,CAAC,EAAArC,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAAC,YAAA,GAAA,EAAA,GAAA,+BAAA,CAAA,CAAA;AAClC,CAAC,CAAA;AAEM,MAAMkE,OAAK,gBAAGlG,UAAU,CAAwB,SAASkG,KAAKA,CAAAC,KAAA,EAgBnEhG,GAAG,EACH;EAAA,IAhBA;IACEmD,eAAe;AACf8C,IAAAA,YAAY,GAAG,KAAK;IACpBlE,uBAAuB;IACvBC,2BAA2B;IAC3BkE,QAAQ;IACRC,OAAO;IACPC,OAAO;IACPC,YAAY;IACZpI,kBAAkB;IAClBG,gBAAgB;IAChBkI,WAAW;AACXC,IAAAA,eAAe,GAAG,CAACC,4CAA4C,CAACC,aAAa,CAAC;IAC9E,GAAGzH,KAAAA;AACL,GAAC,GAAAgH,KAAA,CAAA;AAGD,EAAA,MAAMU,WAAW,GAAGC,cAAc,EAAE,CAAA;EACpC,MAAM;IAAEzE,eAAe;AAAE3B,IAAAA,KAAAA;GAAO,GAAG4B,oBAAoB,EAAE,CAAA;EACzD,MAAM,CAACkB,QAAQ,EAAEuD,WAAW,CAAC,GAAGC,cAAK,CAACC,QAAQ,CAC5C9H,KAAK,CAAC+H,KAAK,KAAKC,SAAS,IAAIhI,KAAK,CAAC+H,KAAK,KAAK,IAAI,IAAI/H,KAAK,CAAC+H,KAAK,KAAK,EACvE,CAAC,CAAA;EAED,MAAM;AAAEvG,IAAAA,aAAAA;GAAe,GAAG4B,yBAAyB,EAAE,CAAA;EACrD,MAAM6E,uBAAuB,GAAGtJ,OAAO,CAAC,MAAM4I,eAAe,EAAE,CAACA,eAAe,CAAC,CAAC,CAAA;EACjF,MAAMW,YAAY,GAAGC,sCAAsC,CAAC;IAC1DC,aAAa,EAAEC,uCAAuC,CAACtB,KAAK;IAC5DO,WAAW;AACXC,IAAAA,eAAe,EAAEU,uBAAuB;AACxCK,IAAAA,aAAa,EAAE,KAAA;AACjB,GAAC,CAAC,CAAA;;AAEF;EACA,MAAM;AAAE3E,IAAAA,sBAAsB,EAAE4E,8BAA8B;AAAE7E,IAAAA,KAAK,EAAE8E,8BAAAA;AAA+B,GAAC,GACrGhF,yBAAyB,CAAC0E,YAAY,CAACO,aAAa,CAAC,CAAA;AAEvD,EAAA,MAAMC,YAAY,GAAGxJ,WAAW,CAC7ByJ,CAAsC,IAAK;AAC1CJ,IAAAA,8BAA8B,EAAE,CAAA;AAChC;AACA;AACA;AACA,IAAA,IAAI,CAACI,CAAC,CAACC,MAAM,CAACb,KAAK,IAAIY,CAAC,CAACE,WAAW,YAAYC,UAAU,KAAK,KAAK,IAAI3B,OAAO,EAAE;AAC/EA,MAAAA,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAPA,KAAAA,CAAAA,IAAAA,OAAO,EAAI,CAAA;MACXS,WAAW,CAAC,KAAK,CAAC,CAAA;AACpB,KAAC,MAAM;AACLV,MAAAA,QAAQ,aAARA,QAAQ,KAAA,KAAA,CAAA,IAARA,QAAQ,CAAGyB,CAAC,CAAC,CAAA;MACbf,WAAW,CAACmB,OAAO,CAACJ,CAAC,CAACC,MAAM,CAACb,KAAK,CAAC,CAAC,CAAA;AACtC,KAAA;GACD,EACD,CAACb,QAAQ,EAAEC,OAAO,EAAEoB,8BAA8B,CACpD,CAAC,CAAA;AAED,EAAA,MAAMS,WAAW,GAAG9J,WAAW,CAC5ByJ,CAAqC,IAAK;AACzCH,IAAAA,8BAA8B,EAAE,CAAA;AAChCpB,IAAAA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,IAAPA,OAAO,CAAGuB,CAAC,CAAC,CAAA;AACd,GAAC,EACD,CAACvB,OAAO,EAAEoB,8BAA8B,CAC1C,CAAC,CAAA;AAED,EAAA,MAAMS,YAAY,GAAG/J,WAAW,CAC7ByJ,CAAwC,IAAK;AAAA,IAAA,IAAAO,oBAAA,CAAA;AAC5C,IAAA,IAAI,EAAAA,CAAAA,oBAAA,GAACxB,WAAW,CAACyB,OAAO,MAAAD,IAAAA,IAAAA,oBAAA,KAAnBA,KAAAA,CAAAA,IAAAA,oBAAA,CAAqB/J,OAAO,CAAE,EAAA,OAAA;IACnCwJ,CAAC,CAACS,cAAc,EAAE,CAAA;AAClB1B,IAAAA,WAAW,CAACyB,OAAO,CAAChK,OAAO,CAACkK,aAAa,EAAE,CAAA;AAC7C,GAAC,EACD,CAAC3B,WAAW,CAACyB,OAAO,CACtB,CAAC,CAAA;EAED,MAAMG,cAAc,GAAGjL,kBAAkB,CAAmB;AAC1DE,IAAAA,QAAQ,EAAE0K,YAAY;AACtBzK,IAAAA,eAAe,EAAE,IAAI;AACrBC,IAAAA,kBAAkB,EAAE,IAAA;AACtB,GAAC,CAAC,CAAA;AAEF,EAAA,MAAM8K,iBAAiB,GAAG3F,qBAAqB,CAC7CjF,OAAO,CACL,OAAO;AAAEkF,IAAAA,QAAQ,EAAE,CAACyF,cAAc,CAACjK,SAAS,EAAEgI,YAAY,CAAC;AAAEvD,IAAAA,sBAAsB,EAAE,KAAA;GAAO,CAAC,EAC7F,CAACwF,cAAc,CAACjK,SAAS,EAAEgI,YAAY,CACzC,CACF,CAAC,CAAA;AAED,EAAA,MAAMmC,uBAAuB,GAAG5F,qBAAqB,CACnDjF,OAAO,CACL,OAAO;AAAEkF,IAAAA,QAAQ,EAAE,CAACyF,cAAc,CAACrK,kBAAkB,EAAEA,kBAAkB,CAAA;GAAG,CAAC,EAC7E,CAACqK,cAAc,CAACrK,kBAAkB,EAAEA,kBAAkB,CACxD,CACF,CAAC,CAAA;AAED,EAAA,MAAMwK,qBAAqB,GAAG7F,qBAAqB,CACjDjF,OAAO,CACL,OAAO;AAAEkF,IAAAA,QAAQ,EAAE,CAACyF,cAAc,CAAClK,gBAAgB,EAAEA,gBAAgB,CAAA;GAAG,CAAC,EACzE,CAACkK,cAAc,CAAClK,gBAAgB,EAAEA,gBAAgB,CACpD,CACF,CAAC,CAAA;EAED,OACEoB,GAAA,CAAC6C,8BAA8B,EAAA;IAAA9C,QAAA,EAC7BC,GAAA,CAAC8C,OAAS,EAAA;MAAA,GACJC,wBAAwB,EAAE;AAC9B0D,MAAAA,YAAY,EAAEA,YAAa;AAC3B,MAAA,iBAAA,EAAiB9C,eAAgB;AACjCnD,MAAAA,GAAG,EAAEA,GAAI;AACTW,MAAAA,GAAG,GACDiF,qBAAqB,CAAC1D,eAAe,EAAE3B,KAAK,EAAE;QAAE4C,eAAe;QAAEC,IAAI,EAAEpE,KAAK,CAACoE,IAAI;QAAEC,QAAQ;AAAE7C,QAAAA,aAAAA;OAAe,CAAC,EAC7GwB,2BAA2B,EAAAL,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAC3B,YAAA,GAAA,EAAA,GAAA,eAAA,CAAA;AACFqE,MAAAA,QAAQ,EAAEwB,YAAa;AACvBtB,MAAAA,OAAO,EAAE4B,WAAY;AACrB3B,MAAAA,YAAY,EAAEkC,iBAAkB;AAChCtK,MAAAA,kBAAkB,EAAEuK,uBAAwB;AAC5CpK,MAAAA,gBAAgB,EAAEqK,qBAAsB;AAAA,MAAA,GACpCzJ,KAAK;AAAA,MAAA,GACL+C,uBAAuB;MAC3B,qBAAqBsF,EAAAA,uCAAuC,CAACtB,KAAM;MACnE,mBAAmBO,EAAAA,WAAAA;KACpB,CAAA;AAAC,GAC4B,CAAC,CAAA;AAErC,CAAC,CAAC;;AC1RK,MAAMoC,QAAiC,gBAAG7I,UAAU,CAA2B,SAAS6I,QAAQA,CAAApL,IAAA,EAErG0C,GAAG,EACH;EAAA,IAFA;IAAEmD,eAAe;AAAE8C,IAAAA,YAAY,GAAG,KAAK;IAAElE,uBAAuB;IAAEC,2BAA2B;IAAE,GAAGhD,KAAAA;AAAM,GAAC,GAAA1B,IAAA,CAAA;EAGzG,MAAM;IAAE4E,eAAe;AAAE3B,IAAAA,KAAAA;GAAO,GAAG4B,oBAAoB,EAAE,CAAA;EACzD,MAAM;AAAE3B,IAAAA,aAAAA;GAAe,GAAG4B,yBAAyB,EAAE,CAAA;EAErD,OACE5C,GAAA,CAAC6C,8BAA8B,EAAA;AAAA9C,IAAAA,QAAA,EAC7BC,GAAA,CAAC8C,OAAS,CAACoG,QAAQ,EAAA;MAAA,GACbnG,wBAAwB,EAAE;AAC9BoG,MAAAA,gBAAgB,EAAE,KAAM;AACxB3I,MAAAA,GAAG,EAAEA,GAAI;AACTiG,MAAAA,YAAY,EAAEA,YAAa;AAC3BtF,MAAAA,GAAG,GACDiF,qBAAqB,CAAC1D,eAAe,EAAE3B,KAAK,EAAE;QAAE4C,eAAe;AAAE3C,QAAAA,aAAAA;OAAe,CAAC,EACjFwB,2BAA2B,EAAAL,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAC3B,YAAA,GAAA,EAAA,GAAA,kBAAA,CAAA;AAAA,MAAA,GACE7C,KAAK;MAAA,GACL+C,uBAAAA;KACL,CAAA;AAAC,GAC4B,CAAC,CAAA;AAErC,CAAC,CAAC;;ACbK,MAAM6G,QAAQ,gBAAG/I,UAAU,CAA6B,SAAS+I,QAAQA,CAAAtL,IAAA,EAgB9E0C,GAAG,EACH;EAAA,IAhBA;IACEmD,eAAe;AACf8C,IAAAA,YAAY,GAAG,KAAK;IACpBlE,uBAAuB;IACvBC,2BAA2B;IAC3BsE,WAAW;AACXC,IAAAA,eAAe,GAAG,CAACC,4CAA4C,CAACC,aAAa,CAAC;IAC9EP,QAAQ;IACRE,OAAO;IACP/H,SAAS;IACTJ,kBAAkB;IAClBG,gBAAgB;AAChByK,IAAAA,sBAAsB,GAAG,KAAK;IAC9B,GAAG7J,KAAAA;AACL,GAAC,GAAA1B,IAAA,CAAA;AAGD,EAAA,MAAMoJ,WAAW,GAAGC,cAAc,EAAE,CAAA;EACpC,MAAM;IAAEzE,eAAe;AAAE3B,IAAAA,KAAAA;GAAO,GAAG4B,oBAAoB,EAAE,CAAA;EACzD,MAAM;AAAE3B,IAAAA,aAAAA;GAAe,GAAG4B,yBAAyB,EAAE,CAAA;EACrD,MAAM6E,uBAAuB,GAAGtJ,OAAO,CAAC,MAAM4I,eAAe,EAAE,CAACA,eAAe,CAAC,CAAC,CAAA;EACjF,MAAMW,YAAY,GAAGC,sCAAsC,CAAC;IAC1DC,aAAa,EAAEC,uCAAuC,CAACuB,QAAQ;IAC/DtC,WAAW;AACXC,IAAAA,eAAe,EAAEU,uBAAuB;AACxCK,IAAAA,aAAa,EAAE,KAAA;AACjB,GAAC,CAAC,CAAA;;AAEF;EACA,MAAM;AAAE3E,IAAAA,sBAAsB,EAAE4E,8BAA8B;AAAE7E,IAAAA,KAAK,EAAE8E,8BAAAA;AAA+B,GAAC,GACrGhF,yBAAyB,CAAC0E,YAAY,CAACO,aAAa,CAAC,CAAA;AAEvD,EAAA,MAAMC,YAAY,GAAGxJ,WAAW,CAC7ByJ,CAAyC,IAAK;AAC7CJ,IAAAA,8BAA8B,EAAE,CAAA;AAChCrB,IAAAA,QAAQ,aAARA,QAAQ,KAAA,KAAA,CAAA,IAARA,QAAQ,CAAGyB,CAAC,CAAC,CAAA;AACf,GAAC,EACD,CAACzB,QAAQ,EAAEqB,8BAA8B,CAC3C,CAAC,CAAA;AAED,EAAA,MAAMS,WAAW,GAAG9J,WAAW,CAC5ByJ,CAAwC,IAAK;AAC5CH,IAAAA,8BAA8B,EAAE,CAAA;AAChCpB,IAAAA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,IAAPA,OAAO,CAAGuB,CAAC,CAAC,CAAA;AACd,GAAC,EACD,CAACvB,OAAO,EAAEoB,8BAA8B,CAC1C,CAAC,CAAA;;AAED;AACA;AACA,EAAA,MAAMsB,gBAAgB,GAAG5K,WAAW,CACjCI,KAA+C,IAAK;AAAA,IAAA,IAAA4J,oBAAA,CAAA;AACnD,IAAA,IAAI,EAAAA,CAAAA,oBAAA,GAACxB,WAAW,CAACyB,OAAO,MAAAD,IAAAA,IAAAA,oBAAA,KAAnBA,KAAAA,CAAAA,IAAAA,oBAAA,CAAqB/J,OAAO,CAAE,EAAA,OAAA;IAEnCG,KAAK,CAAC8J,cAAc,EAAE,CAAA;AACtB1B,IAAAA,WAAW,CAACyB,OAAO,CAAChK,OAAO,CAACkK,aAAa,EAAE,CAAA;AAC7C,GAAC,EACD,CAAC3B,WAAW,CAACyB,OAAO,CACtB,CAAC,CAAA;AACD;AACA;EACA,MAAMG,cAAc,GAAGjL,kBAAkB,CAAC;AACxCE,IAAAA,QAAQ,EAAEuL,gBAAgB;AAC1BtL,IAAAA,eAAe,EAAEqL,sBAAsB;AAAE;IACzCpL,kBAAkB,EAAE,IAAI;AAC1B,GAAC,CAAC,CAAA;;AAEF;AACA,EAAA,MAAMsL,cAAc,GAAGnG,qBAAqB,CAC1CjF,OAAO,CACL,OAAO;AACLkF,IAAAA,QAAQ,EAAE,CAACyF,cAAc,CAACjK,SAAS,EAAEA,SAAS,CAAC;IAC/CyE,sBAAsB,EAAE,IAAI;GAC7B,CAAC,EACF,CAACzE,SAAS,EAAEiK,cAAc,CAACjK,SAAS,CACtC,CACF,CAAC,CAAA;AACD,EAAA,MAAMmK,uBAAuB,GAAG5F,qBAAqB,CACnDjF,OAAO,CACL,OAAO;AAAEkF,IAAAA,QAAQ,EAAE,CAACyF,cAAc,CAACrK,kBAAkB,EAAEA,kBAAkB,CAAA;GAAG,CAAC,EAC7E,CAACqK,cAAc,CAACrK,kBAAkB,EAAEA,kBAAkB,CACxD,CACF,CAAC,CAAA;AACD,EAAA,MAAMwK,qBAAqB,GAAG7F,qBAAqB,CACjDjF,OAAO,CACL,OAAO;AAAEkF,IAAAA,QAAQ,EAAE,CAACyF,cAAc,CAAClK,gBAAgB,EAAEA,gBAAgB,CAAA;GAAG,CAAC,EACzE,CAACkK,cAAc,CAAClK,gBAAgB,EAAEA,gBAAgB,CACpD,CACF,CAAC,CAAA;EAED,OACEoB,GAAA,CAAC6C,8BAA8B,EAAA;AAAA9C,IAAAA,QAAA,EAC7BC,GAAA,CAAC8C,OAAS,CAACsG,QAAQ,EAAA;MAAA,GACbrG,wBAAwB,EAAE;AAC9BvC,MAAAA,GAAG,EAAEA,GAAI;AACTiG,MAAAA,YAAY,EAAEA,YAAa;AAC3BtF,MAAAA,GAAG,GACDiF,qBAAqB,CAAC1D,eAAe,EAAE3B,KAAK,EAAE;QAAE4C,eAAe;AAAE3C,QAAAA,aAAAA;OAAe,CAAC,EACjFwB,2BAA2B,EAAAL,OAAA,CAAAC,GAAA,CAAAC,QAAA,KAC3B,YAAA,GAAA,EAAA,GAAA,kBAAA,CAAA;AACFqE,MAAAA,QAAQ,EAAEwB,YAAa;AACvBtB,MAAAA,OAAO,EAAE4B,WAAY;AACrB3J,MAAAA,SAAS,EAAE0K,cAAe;AAC1B9K,MAAAA,kBAAkB,EAAEuK,uBAAwB;AAC5CpK,MAAAA,gBAAgB,EAAEqK,qBAAsB;MACxC,qBAAqBpB,EAAAA,uCAAuC,CAACuB,QAAS;AACtE,MAAA,mBAAA,EAAmBtC,WAAY;AAAA,MAAA,GAC3BtH,KAAK;MAAA,GACL+C,uBAAAA;KACL,CAAA;AAAC,GAC4B,CAAC,CAAA;AAErC,CAAC,CAAC;;AC9HF;AACA,MAAMiH,cAAc,kBAAmBC,MAAM,CAACC,MAAM,CAACC,OAAa,EAAE;EAAEP,QAAQ;EAAEF,QAAQ;AAAE5G,EAAAA,KAAAA;AAAM,CAAC,CAAC,CAAA;AAE5FiE,MAAAA,KAAK,GAAGiD;;;;"}