{"version":3,"file":"index-BEvZfy7Q.js","sources":["../src/design-system/Icon/__generated/icons/ClockIcon.tsx","../src/design-system/Icon/__generated/icons/LockIcon.tsx","../src/design-system/Icon/__generated/icons/MegaphoneIcon.tsx","../src/design-system/Icon/__generated/icons/SearchIcon.tsx","../src/design-system/Icon/__generated/icons/XCircleFillIcon.tsx","../src/design-system/utils/useCallbackOnEnter.ts","../src/design-system/Input/Group.tsx","../src/design-system/utils/useCallbackOnceUntilReset.ts","../src/design-system/utils/useChainEventHandlers.ts","../src/design-system/Input/Input.tsx","../src/design-system/Input/Password.tsx","../src/design-system/Input/TextArea.tsx","../src/design-system/Input/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { forwardRef } from 'react';\nimport type { Ref } from 'react';\n\nimport type { IconProps } from '../../Icon';\nimport { Icon } from '../../Icon';\nfunction SvgClockIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 16 16\" {...props}>\n      <path fill=\"currentColor\" d=\"M7.25 4v4c0 .199.079.39.22.53l2 2 1.06-1.06-1.78-1.78V4z\" />\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0M1.5 8a6.5 6.5 0 1 1 13 0 6.5 6.5 0 0 1-13 0\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\nconst ClockIcon = forwardRef((props: IconProps, forwardedRef?: Ref<HTMLSpanElement>) => {\n  return <Icon ref={forwardedRef} {...props} component={SvgClockIcon} />;\n});\nClockIcon.displayName = 'ClockIcon';\nexport default ClockIcon;\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport type { Ref } from 'react';\n\nimport type { IconProps } from '../../Icon';\nimport { Icon } from '../../Icon';\nfunction SvgLockIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 16 16\" {...props}>\n      <path fill=\"currentColor\" d=\"M7.25 9v4h1.5V9z\" />\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M12 6V4a4 4 0 0 0-8 0v2H2.75a.75.75 0 0 0-.75.75v8.5c0 .414.336.75.75.75h10.5a.75.75 0 0 0 .75-.75v-8.5a.75.75 0 0 0-.75-.75zm.5 1.5v7h-9v-7zM5.5 4v2h5V4a2.5 2.5 0 0 0-5 0\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\nconst LockIcon = forwardRef((props: IconProps, forwardedRef?: Ref<HTMLSpanElement>) => {\n  return <Icon ref={forwardedRef} {...props} component={SvgLockIcon} />;\n});\nLockIcon.displayName = 'LockIcon';\nexport default LockIcon;\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport type { Ref } from 'react';\n\nimport type { IconProps } from '../../Icon';\nimport { Icon } from '../../Icon';\nfunction SvgMegaphoneIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M12.197 1.243A.75.75 0 0 1 12.75 1h1.5a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-1.5a.75.75 0 0 1-.553-.243l-.892-.973A5.5 5.5 0 0 0 8 10.051V13a2 2 0 1 1-4 0v-3a3 3 0 0 1 0-6h3.25a5.5 5.5 0 0 0 4.055-1.784zM6.5 8.5v-3H4a1.5 1.5 0 1 0 0 3zm-1 1.5v3a.5.5 0 0 0 1 0v-3zm6.911.77A7 7 0 0 0 8 8.54V5.46a7 7 0 0 0 4.411-2.23l.669-.73h.42v9h-.42z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\nconst MegaphoneIcon = forwardRef((props: IconProps, forwardedRef?: Ref<HTMLSpanElement>) => {\n  return <Icon ref={forwardedRef} {...props} component={SvgMegaphoneIcon} />;\n});\nMegaphoneIcon.displayName = 'MegaphoneIcon';\nexport default MegaphoneIcon;\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport type { Ref } from 'react';\n\nimport type { IconProps } from '../../Icon';\nimport { Icon } from '../../Icon';\nfunction SvgSearchIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 16 16\" {...props}>\n      <g clipPath=\"url(#SearchIcon_svg__a)\">\n        <path\n          fill=\"currentColor\"\n          fillRule=\"evenodd\"\n          d=\"M8 1a7 7 0 1 0 4.39 12.453l2.55 2.55 1.06-1.06-2.55-2.55A7 7 0 0 0 8 1M2.5 8a5.5 5.5 0 1 1 11 0 5.5 5.5 0 0 1-11 0\"\n          clipRule=\"evenodd\"\n        />\n      </g>\n      <defs>\n        <clipPath>\n          <path fill=\"#fff\" d=\"M0 0h16v16H0z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\nconst SearchIcon = forwardRef((props: IconProps, forwardedRef?: Ref<HTMLSpanElement>) => {\n  return <Icon ref={forwardedRef} {...props} component={SvgSearchIcon} />;\n});\nSearchIcon.displayName = 'SearchIcon';\nexport default SearchIcon;\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport type { Ref } from 'react';\n\nimport type { IconProps } from '../../Icon';\nimport { Icon } from '../../Icon';\nfunction SvgXCircleFillIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 16 16\" {...props}>\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m1.97-4.97L8 9.06l-1.97 1.97-1.06-1.06L6.94 8 4.97 6.03l1.06-1.06L8 6.94l1.97-1.97 1.06 1.06L9.06 8l1.97 1.97z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\nconst XCircleFillIcon = forwardRef((props: IconProps, forwardedRef?: Ref<HTMLSpanElement>) => {\n  return <Icon ref={forwardedRef} {...props} component={SvgXCircleFillIcon} />;\n});\nXCircleFillIcon.displayName = 'XCircleFillIcon';\nexport default XCircleFillIcon;\n","import { useCallback, useMemo, useRef } from 'react';\n\n/**\n * ES-1267895 When entering composed characters, we should not submit forms on Enter.\n * For instance Japanese characters are composed and we should not submit forms when\n * the user is still composing the characters.\n *\n * This hook provides a reusable way to invoke a callback on Enter,\n * but not when composing characters.\n * This can be used to invoke a form submission callback when Enter is pressed.\n * @param callback VoidFunction to call when the Enter is pressed\n * @param allowBasicEnter If true, the callback will be invoked when Enter is pressed without any modifiers\n * @param allowPlatformEnter If true, the callback will be invoked when Enter is pressed with the platform modifier (CMD on Mac, CTRL on Windows)\n * @returns Object with onKeyDown, onCompositionEnd, and onCompositionStart event handlers\n *\n * @example\n * ```tsx\n * const handleSubmit = (event: React.KeyboardEvent) => {\n *  event.preventDefault();\n * // Submit the form\n * };\n * const eventHandlers = useCallbackOnEnter({\n *   callback: handleSubmit,\n *   allowBasicEnter: true,\n *   allowPlatformEnter: true,\n * })\n * return <input {...eventHandlers} />;\n * ```\n */\nexport const useCallbackOnEnter = <T extends Element>({\n  callback,\n  allowBasicEnter,\n  allowPlatformEnter,\n}: {\n  callback: React.KeyboardEventHandler<T>;\n  allowBasicEnter: boolean;\n  allowPlatformEnter: boolean;\n}) => {\n  const isMacOs = useMemo(() => navigator.userAgent.includes('Mac'), []);\n  // Keeping track of whether we are composing characters\n  // This is stored in a ref so that it can be accessed in the onKeyDown event handler\n  // without causing a re-renders\n  const isComposing = useRef(false);\n\n  // Handler for when the composition starts\n  const onCompositionStart: React.CompositionEventHandler<T> = useCallback(() => {\n    isComposing.current = true;\n  }, []);\n\n  // Handler for when the composition ends\n  const onCompositionEnd: React.CompositionEventHandler<T> = useCallback(() => {\n    isComposing.current = false;\n  }, []);\n\n  // Handler for when a key is pressed\n  // Used to submit the form when Enter is pressed\n  const onKeyDown: React.KeyboardEventHandler<T> = useCallback(\n    (event) => {\n      // Only invoke the callback on Enter\n      if (event.key !== 'Enter') return;\n      // Do not submit on Enter if user is composing characters\n      if (isComposing.current) return;\n      // Do not submit on Enter if both are false\n      if (!allowBasicEnter && !allowPlatformEnter) return;\n      // Check if the event is a valid Enter press\n      const basicEnter = allowBasicEnter && !event.metaKey && !event.ctrlKey && !event.shiftKey && !event.altKey;\n      const platformEnter = allowPlatformEnter && (isMacOs ? event.metaKey : event.ctrlKey);\n      const isValidEnterPress = basicEnter || platformEnter;\n      // Submit the form if the Enter press is valid\n      if (isValidEnterPress) callback(event);\n    },\n    [allowBasicEnter, allowPlatformEnter, callback, isMacOs],\n  );\n\n  return { onKeyDown, onCompositionEnd, onCompositionStart };\n};\n","import { css } from '@emotion/react';\nimport { Input as AntDInput } from 'antd';\n\nimport type { InputGroupProps } from './common';\nimport type { Theme } from '../../theme';\nimport { DesignSystemAntDConfigProvider } from '../DesignSystemProvider';\nimport { useDesignSystemTheme } from '../Hooks/useDesignSystemTheme';\nimport { useDesignSystemSafexFlags } from '../utils';\nimport { addDebugOutlineIfEnabled } from '../utils/debug';\n\nconst getInputGroupStyling = (clsPrefix: string, theme: Theme, useNewShadows: boolean, useNewBorderRadii: boolean) => {\n  const inputClass = `.${clsPrefix}-input`;\n  const buttonClass = `.${clsPrefix}-btn`;\n  return css({\n    display: 'inline-flex !important',\n    width: 'auto',\n    [`& > ${inputClass}`]: {\n      flexGrow: 1,\n      ...(useNewBorderRadii && {\n        borderTopRightRadius: '0px !important',\n        borderBottomRightRadius: '0px !important',\n      }),\n      '&:disabled': {\n        border: 'none',\n        background: theme.colors.actionDisabledBackground,\n        '&:hover': {\n          borderRight: `1px solid ${theme.colors.actionDisabledBorder} !important`,\n        },\n      },\n      '&[data-validation]': {\n        marginRight: 0,\n      },\n    },\n\n    ...(useNewShadows && {\n      [`& > ${buttonClass}`]: {\n        boxShadow: 'none !important',\n      },\n    }),\n\n    ...(useNewBorderRadii && {\n      [`& > ${buttonClass}`]: {\n        borderTopLeftRadius: '0px !important',\n        borderBottomLeftRadius: '0px !important',\n      },\n    }),\n\n    [`& > ${buttonClass} > span`]: {\n      verticalAlign: 'middle',\n    },\n    [`& > ${buttonClass}:disabled, & > ${buttonClass}:disabled:hover`]: {\n      borderLeft: `1px solid ${theme.colors.actionDisabledBorder} !important`,\n      backgroundColor: `${theme.colors.actionDisabledBackground} !important`,\n      color: `${theme.colors.actionDisabledText} !important`,\n    },\n  });\n};\nexport const Group = ({\n  dangerouslySetAntdProps,\n  dangerouslyAppendEmotionCSS,\n  compact = true,\n  ...props\n}: InputGroupProps) => {\n  const { classNamePrefix, theme } = useDesignSystemTheme();\n  const { useNewShadows, useNewBorderRadii } = useDesignSystemSafexFlags();\n\n  return (\n    <DesignSystemAntDConfigProvider>\n      <AntDInput.Group\n        {...addDebugOutlineIfEnabled()}\n        css={[\n          getInputGroupStyling(classNamePrefix, theme, useNewShadows, useNewBorderRadii),\n          dangerouslyAppendEmotionCSS,\n        ]}\n        compact={compact}\n        {...props}\n        {...dangerouslySetAntdProps}\n      />\n    </DesignSystemAntDConfigProvider>\n  );\n};\n","import { useCallback, useRef } from 'react';\n\n/**\n * A React custom hook that allows a callback function to be executed exactly once until it is explicitly reset.\n *\n * Usage:\n *\n * const originalCallback = () => { console.log('originalCallback'); }\n * const { callbackOnceUntilReset, reset } = useCallbackOnceUntilReset(originalCallback);\n *\n * // To execute the callback\n * callbackOnceUntilReset(); // Prints 'originalCallback'\n * callbackOnceUntilReset(); // No effect for further calls\n * reset();\n * callbackOnceUntilReset(); // Prints 'originalCallback' again\n */\nconst useCallbackOnceUntilReset = <T>(callback: () => T) => {\n  const canTriggerRef = useRef(true);\n  const reset = useCallback(() => {\n    canTriggerRef.current = true;\n  }, []);\n\n  const callbackOnceUntilReset = useCallback(() => {\n    if (canTriggerRef.current) {\n      callback();\n      canTriggerRef.current = false;\n    }\n  }, [callback]);\n\n  return { callbackOnceUntilReset, reset };\n};\n\nexport { useCallbackOnceUntilReset };\n","import { useCallback } from 'react';\n\n/**\n * This hook provides a way to chain event handlers together.\n * Optionally, it can stop calling the next handler if the event has been defaultPrevented.\n * @param handlers Array of event handlers to chain together. Optional handlers are allowed for convenience.\n * @param stopOnDefaultPrevented If true, the next handler will not be called if the event has been defaultPrevented\n * @returns A function that will call each handler in the order they are provided\n * @example\n * ```tsx\n * const onClick = useChainEventHandlers({ handlers: [onClick1, onClick2] });\n * return <button onClick={onClick} />;\n */\nexport const useChainEventHandlers = <T extends React.SyntheticEvent<any>>(props: {\n  handlers: Array<React.EventHandler<T> | undefined>;\n  stopOnDefaultPrevented?: boolean;\n}) => {\n  const { handlers, stopOnDefaultPrevented } = props;\n  return useCallback(\n    (event: T) => {\n      // Loop over each handler in succession\n      for (const handler of handlers) {\n        // Break if the event has been defaultPrevented and stopOnDefaultPrevented is true\n        if (stopOnDefaultPrevented && event.defaultPrevented) return;\n        // Call the handler if it exists\n        handler?.(event);\n      }\n    },\n    [handlers, stopOnDefaultPrevented],\n  );\n};\n","import type { CSSObject, SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { Input as AntDInput } from 'antd';\nimport React, { forwardRef, useCallback, useEffect, useMemo, useRef } from 'react';\n\nimport type { InputProps } from './common';\nimport { useFormContext } from '../../development/Form/Form';\nimport type { Theme } from '../../theme';\nimport {\n  DesignSystemEventProviderAnalyticsEventTypes,\n  DesignSystemEventProviderComponentTypes,\n  useDesignSystemEventComponentCallbacks,\n} from '../DesignSystemEventProvider/DesignSystemEventProvider';\nimport { DesignSystemAntDConfigProvider, getAnimationCss } from '../DesignSystemProvider';\nimport { useDesignSystemTheme } from '../Hooks/useDesignSystemTheme';\nimport { LockIcon } from '../Icon';\nimport type { ValidationState } from '../types';\nimport { useDesignSystemSafexFlags } from '../utils';\nimport { getValidationStateColor, importantify } from '../utils/css-utils';\nimport { addDebugOutlineIfEnabled } from '../utils/debug';\nimport { safex } from '../utils/safex';\nimport { useCallbackOnEnter } from '../utils/useCallbackOnEnter';\nimport { useCallbackOnceUntilReset } from '../utils/useCallbackOnceUntilReset';\nimport { useChainEventHandlers } from '../utils/useChainEventHandlers';\n\ninterface InputStylesOptions {\n  useFocusWithin?: boolean;\n}\n\nexport const getInputStyles = (\n  clsPrefix: string,\n  theme: Theme,\n  {\n    validationState,\n    type,\n    hasValue,\n    useNewShadows,\n    useNewFormUISpacing,\n    useNewBorderRadii,\n    locked,\n  }: {\n    validationState?: ValidationState;\n    type?: string;\n    hasValue?: boolean;\n    useNewShadows?: boolean;\n    useNewFormUISpacing?: boolean;\n    useNewBorderRadii?: boolean;\n    locked?: boolean;\n  },\n  { useFocusWithin = false }: InputStylesOptions,\n): CSSObject => {\n  const inputClass = `.${clsPrefix}-input`;\n  const affixClass = `.${clsPrefix}-input-affix-wrapper`;\n  const affixClassDisabled = `.${clsPrefix}-input-affix-wrapper-disabled`;\n  const affixClassFocused = `.${clsPrefix}-input-affix-wrapper-focused`;\n  const clearIcon = `.${clsPrefix}-input-clear-icon`;\n  const prefixIcon = `.${clsPrefix}-input-prefix`;\n  const suffixIcon = `.${clsPrefix}-input-suffix`;\n\n  const validationColor = getValidationStateColor(theme, validationState);\n\n  const focusSpecifier = useFocusWithin ? 'focus-within' : 'focus';\n\n  const styles = {\n    '&&': {\n      lineHeight: theme.typography.lineHeightBase,\n      minHeight: theme.general.heightSm,\n      borderColor: theme.colors.actionDefaultBorderDefault,\n      ...(validationState && { borderColor: validationColor }),\n\n      '&:hover': {\n        borderColor: validationState ? validationColor : theme.colors.actionPrimaryBackgroundHover,\n      },\n\n      [`&:${focusSpecifier}`]: {\n        outlineColor: validationState ? validationColor : theme.colors.actionDefaultBorderFocus,\n        outlineWidth: 2,\n        outlineOffset: -2,\n        outlineStyle: 'solid',\n        ...(!useNewShadows && {\n          boxShadow: 'none',\n        }),\n        borderColor: 'transparent',\n      },\n\n      '&:focus-visible': {\n        outlineColor: validationState ? validationColor : theme.colors.actionDefaultBorderFocus,\n        outlineWidth: 2,\n        outlineOffset: -2,\n        outlineStyle: 'solid',\n        ...(!useNewShadows && {\n          boxShadow: 'none',\n        }),\n        borderColor: 'transparent',\n      },\n\n      ...(useNewFormUISpacing && {\n        [`& + .${clsPrefix}-form-message`]: {\n          marginTop: theme.spacing.sm,\n        },\n      }),\n    },\n\n    [`&${inputClass}, ${inputClass}`]: {\n      backgroundColor: 'transparent',\n      ...(useNewBorderRadii && {\n        borderRadius: theme.borders.borderRadiusSm,\n      }),\n      '&:disabled': {\n        backgroundColor: theme.colors.actionDisabledBackground,\n        color: theme.colors.actionDisabledText,\n        borderColor: theme.colors.actionDisabledBorder,\n      },\n      '&::placeholder': {\n        color: theme.colors.textPlaceholder,\n      },\n    },\n\n    [`&${affixClass}`]: {\n      backgroundColor: 'transparent',\n      lineHeight: theme.typography.lineHeightBase,\n      paddingTop: 5,\n      paddingBottom: 5,\n      minHeight: theme.general.heightSm,\n\n      '::before': {\n        lineHeight: theme.typography.lineHeightBase,\n      },\n\n      '&:hover': {\n        borderColor: validationState ? validationColor : theme.colors.actionPrimaryBackgroundHover,\n      },\n\n      [`input.${clsPrefix}-input`]: {\n        borderRadius: 0,\n      },\n    },\n\n    [`&${affixClassDisabled}`]: {\n      backgroundColor: theme.colors.actionDisabledBackground,\n    },\n\n    [`&${affixClassFocused}`]: {\n      boxShadow: 'none',\n      [`&&, &:${focusSpecifier}`]: {\n        outlineColor: validationState ? validationColor : theme.colors.actionDefaultBorderFocus,\n        outlineWidth: 2,\n        outlineOffset: -2,\n        outlineStyle: 'solid',\n        boxShadow: 'none',\n        borderColor: 'transparent',\n      },\n    },\n\n    [clearIcon]: {\n      fontSize: theme.typography.fontSizeSm,\n    },\n\n    [prefixIcon]: {\n      marginRight: theme.spacing.sm,\n      color: theme.colors.textSecondary,\n    },\n\n    [suffixIcon]: {\n      marginLeft: theme.spacing.sm,\n      color: theme.colors.textSecondary,\n\n      ...(!hasValue &&\n        type === 'number' && {\n          display: 'none',\n        }),\n    },\n\n    ...(locked\n      ? {\n          [`&${affixClass}`]: {\n            backgroundColor: theme.colors.backgroundSecondary,\n          },\n          [`input.${clsPrefix}-input`]: {\n            backgroundColor: `${theme.colors.backgroundSecondary} !important`,\n            color: `${theme.colors.textPrimary} !important`,\n          },\n        }\n      : {}),\n\n    ...getAnimationCss(theme.options.enableAnimation),\n  };\n\n  return styles;\n};\n\nexport const getInputEmotionStyles = (\n  clsPrefix: string,\n  theme: Theme,\n  {\n    validationState,\n    type,\n    hasValue,\n    useNewShadows,\n    useNewBorderRadii,\n    locked,\n  }: {\n    validationState?: ValidationState;\n    type?: string;\n    hasValue?: boolean;\n    useNewShadows: boolean;\n    useNewBorderRadii?: boolean;\n    locked?: boolean;\n  },\n): SerializedStyles => {\n  const styles = getInputStyles(\n    clsPrefix,\n    theme,\n    { validationState, type, hasValue, useNewShadows, useNewBorderRadii, locked },\n    {},\n  );\n  return css(importantify(styles));\n};\n\nexport const Input = forwardRef<AntDInput, InputProps>(function Input(\n  {\n    validationState,\n    autoComplete = 'off',\n    dangerouslySetAntdProps,\n    dangerouslyAppendEmotionCSS,\n    onChange,\n    onClear,\n    onFocus,\n    onPressEnter,\n    onCompositionStart,\n    onCompositionEnd,\n    componentId,\n    shouldPreventFormSubmission,\n    analyticsEvents,\n    readOnly,\n    locked,\n    ...props\n  },\n  ref,\n) {\n  const emitOnView = safex('databricks.fe.observability.defaultComponentView.input', false);\n  const formContext = useFormContext();\n  const { classNamePrefix, theme } = useDesignSystemTheme();\n  const [hasValue, setHasValue] = React.useState(\n    props.value !== undefined && props.value !== null && props.value !== '',\n  );\n\n  const { useNewShadows, useNewBorderRadii } = useDesignSystemSafexFlags();\n  const memoizedAnalyticsEvents = useMemo(\n    () =>\n      analyticsEvents ??\n      (emitOnView\n        ? [\n            DesignSystemEventProviderAnalyticsEventTypes.OnValueChange,\n            DesignSystemEventProviderAnalyticsEventTypes.OnView,\n          ]\n        : [DesignSystemEventProviderAnalyticsEventTypes.OnValueChange]),\n    [analyticsEvents, emitOnView],\n  );\n  const eventContext = useDesignSystemEventComponentCallbacks({\n    componentType: DesignSystemEventProviderComponentTypes.Input,\n    componentId,\n    analyticsEvents: memoizedAnalyticsEvents,\n    valueHasNoPii: false,\n  });\n\n  const firstView = useRef(true);\n  useEffect(() => {\n    if (firstView.current) {\n      eventContext.onView();\n      firstView.current = false;\n    }\n  }, [eventContext]);\n\n  // Prevents multiple onValueChange triggers until after a focus event resets it.\n  const { callbackOnceUntilReset: sendAnalyticsEventOncePerFocus, reset: resetSendAnalyticsEventOnFocus } =\n    useCallbackOnceUntilReset(eventContext.onValueChange);\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      sendAnalyticsEventOncePerFocus();\n      // If the input is cleared, call the onClear handler, but only\n      // if the event is not an input event -- which is the case when you click the\n      // ant-provided (X) button.\n      if (!e.target.value && e.nativeEvent instanceof InputEvent === false && onClear) {\n        onClear?.();\n        setHasValue(false);\n      } else {\n        onChange?.(e);\n        setHasValue(Boolean(e.target.value));\n      }\n    },\n    [onChange, onClear, sendAnalyticsEventOncePerFocus],\n  );\n\n  const handleFocus = useCallback(\n    (e: React.FocusEvent<HTMLInputElement>) => {\n      resetSendAnalyticsEventOnFocus();\n      onFocus?.(e);\n    },\n    [onFocus, resetSendAnalyticsEventOnFocus],\n  );\n\n  const onFormSubmit = useCallback(\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\n      if (!formContext.formRef?.current) return;\n      e.preventDefault();\n      formContext.formRef.current.requestSubmit();\n    },\n    [formContext.formRef],\n  );\n\n  const submitHandlers = useCallbackOnEnter<HTMLInputElement>({\n    callback: onFormSubmit,\n    allowBasicEnter: !shouldPreventFormSubmission,\n    allowPlatformEnter: !shouldPreventFormSubmission,\n  });\n\n  const onPressEnterChain = useChainEventHandlers(\n    useMemo(\n      () => ({ handlers: [submitHandlers.onKeyDown, onPressEnter], stopOnDefaultPrevented: false }),\n      [submitHandlers.onKeyDown, onPressEnter],\n    ),\n  );\n\n  const onCompositionStartChain = useChainEventHandlers(\n    useMemo(\n      () => ({ handlers: [submitHandlers.onCompositionStart, onCompositionStart] }),\n      [submitHandlers.onCompositionStart, onCompositionStart],\n    ),\n  );\n\n  const onCompositionEndChain = useChainEventHandlers(\n    useMemo(\n      () => ({ handlers: [submitHandlers.onCompositionEnd, onCompositionEnd] }),\n      [submitHandlers.onCompositionEnd, onCompositionEnd],\n    ),\n  );\n\n  return (\n    <DesignSystemAntDConfigProvider>\n      <AntDInput\n        {...addDebugOutlineIfEnabled()}\n        autoComplete={autoComplete}\n        data-validation={validationState}\n        ref={ref}\n        css={[\n          getInputEmotionStyles(classNamePrefix, theme, {\n            validationState,\n            type: props.type,\n            hasValue,\n            useNewShadows,\n            useNewBorderRadii,\n            locked,\n          }),\n          dangerouslyAppendEmotionCSS,\n        ]}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onPressEnter={onPressEnterChain}\n        onCompositionStart={onCompositionStartChain}\n        onCompositionEnd={onCompositionEndChain}\n        {...props}\n        readOnly={locked || readOnly}\n        suffix={locked ? <LockIcon /> : props.suffix}\n        {...dangerouslySetAntdProps}\n        {...eventContext.dataComponentProps}\n      />\n    </DesignSystemAntDConfigProvider>\n  );\n});\n","import { Input as AntDInput } from 'antd';\nimport React, { forwardRef } from 'react';\n\nimport { getInputEmotionStyles } from './Input';\nimport type { PasswordProps } from './common';\nimport { DesignSystemAntDConfigProvider } from '../DesignSystemProvider';\nimport { useDesignSystemTheme } from '../Hooks/useDesignSystemTheme';\nimport { useDesignSystemSafexFlags } from '../utils';\nimport { addDebugOutlineIfEnabled } from '../utils/debug';\n\nexport const Password: React.FC<PasswordProps> = forwardRef<AntDInput, PasswordProps>(function Password(\n  { validationState, autoComplete = 'off', dangerouslySetAntdProps, dangerouslyAppendEmotionCSS, ...props },\n  ref,\n) {\n  const { classNamePrefix, theme } = useDesignSystemTheme();\n  const { useNewShadows, useNewBorderRadii } = useDesignSystemSafexFlags();\n\n  return (\n    <DesignSystemAntDConfigProvider>\n      <AntDInput.Password\n        {...addDebugOutlineIfEnabled()}\n        visibilityToggle={false}\n        ref={ref}\n        autoComplete={autoComplete}\n        css={[\n          getInputEmotionStyles(classNamePrefix, theme, { validationState, useNewShadows, useNewBorderRadii }),\n          dangerouslyAppendEmotionCSS,\n        ]}\n        {...props}\n        {...dangerouslySetAntdProps}\n      />\n    </DesignSystemAntDConfigProvider>\n  );\n});\n","import { Input as AntDInput } from 'antd';\nimport type { TextAreaRef } from 'antd/lib/input/TextArea';\nimport { forwardRef, useCallback, useEffect, useMemo, useRef } from 'react';\n\nimport { getInputEmotionStyles } from './Input';\nimport type { TextAreaProps } from './common';\nimport { useFormContext } from '../../development/Form';\nimport {\n  DesignSystemEventProviderAnalyticsEventTypes,\n  DesignSystemEventProviderComponentTypes,\n  useDesignSystemEventComponentCallbacks,\n} from '../DesignSystemEventProvider/DesignSystemEventProvider';\nimport { DesignSystemAntDConfigProvider } from '../DesignSystemProvider';\nimport { useDesignSystemTheme } from '../Hooks/useDesignSystemTheme';\nimport { useDesignSystemSafexFlags } from '../utils';\nimport { addDebugOutlineIfEnabled } from '../utils/debug';\nimport { safex } from '../utils/safex';\nimport { useCallbackOnEnter } from '../utils/useCallbackOnEnter';\nimport { useCallbackOnceUntilReset } from '../utils/useCallbackOnceUntilReset';\nimport { useChainEventHandlers } from '../utils/useChainEventHandlers';\n\nexport const TextArea = forwardRef<TextAreaRef, TextAreaProps>(function TextArea(\n  {\n    validationState,\n    autoComplete = 'off',\n    dangerouslySetAntdProps,\n    dangerouslyAppendEmotionCSS,\n    componentId,\n    analyticsEvents,\n    onChange,\n    onFocus,\n    onKeyDown,\n    onCompositionStart,\n    onCompositionEnd,\n    allowFormSubmitOnEnter = false,\n    ...props\n  },\n  ref,\n) {\n  const emitOnView = safex('databricks.fe.observability.defaultComponentView.textArea', false);\n  const formContext = useFormContext();\n  const { classNamePrefix, theme } = useDesignSystemTheme();\n  const { useNewShadows, useNewBorderRadii } = useDesignSystemSafexFlags();\n  const memoizedAnalyticsEvents = useMemo(\n    () =>\n      analyticsEvents ??\n      (emitOnView\n        ? [\n            DesignSystemEventProviderAnalyticsEventTypes.OnValueChange,\n            DesignSystemEventProviderAnalyticsEventTypes.OnView,\n          ]\n        : [DesignSystemEventProviderAnalyticsEventTypes.OnValueChange]),\n    [analyticsEvents, emitOnView],\n  );\n  const eventContext = useDesignSystemEventComponentCallbacks({\n    componentType: DesignSystemEventProviderComponentTypes.TextArea,\n    componentId,\n    analyticsEvents: memoizedAnalyticsEvents,\n    valueHasNoPii: false,\n  });\n  const firstView = useRef(true);\n  useEffect(() => {\n    if (firstView.current) {\n      eventContext.onView();\n      firstView.current = false;\n    }\n  }, [eventContext]);\n\n  // Prevents multiple onValueChange triggers until after a focus event resets it.\n  const { callbackOnceUntilReset: sendAnalyticsEventOncePerFocus, reset: resetSendAnalyticsEventOnFocus } =\n    useCallbackOnceUntilReset(eventContext.onValueChange);\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      sendAnalyticsEventOncePerFocus();\n      onChange?.(e);\n    },\n    [onChange, sendAnalyticsEventOncePerFocus],\n  );\n\n  const handleFocus = useCallback(\n    (e: React.FocusEvent<HTMLTextAreaElement>) => {\n      resetSendAnalyticsEventOnFocus();\n      onFocus?.(e);\n    },\n    [onFocus, resetSendAnalyticsEventOnFocus],\n  );\n\n  // Callback used to submit the parent form\n  // This is used when allowFormSubmitOnEnter is true\n  const handleSubmitForm = useCallback(\n    (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      if (!formContext.formRef?.current) return;\n\n      event.preventDefault();\n      formContext.formRef.current.requestSubmit();\n    },\n    [formContext.formRef],\n  );\n  // Event handlers for submitting the form on Enter\n  // This hook takes meta keys into account for platform-specific behavior\n  const submitHandlers = useCallbackOnEnter({\n    callback: handleSubmitForm,\n    allowBasicEnter: allowFormSubmitOnEnter, // Conditionally allow form submission on Enter\n    allowPlatformEnter: true, // Always allow form submission on platform Enter\n  });\n\n  // Chains the event handlers from useCallbackOnEnter together with potential event handlers from props\n  const onKeyDownChain = useChainEventHandlers(\n    useMemo(\n      () => ({\n        handlers: [submitHandlers.onKeyDown, onKeyDown],\n        stopOnDefaultPrevented: true, // If the form is submitted, do not call the next handler\n      }),\n      [onKeyDown, submitHandlers.onKeyDown],\n    ),\n  );\n  const onCompositionStartChain = useChainEventHandlers(\n    useMemo(\n      () => ({ handlers: [submitHandlers.onCompositionStart, onCompositionStart] }),\n      [submitHandlers.onCompositionStart, onCompositionStart],\n    ),\n  );\n  const onCompositionEndChain = useChainEventHandlers(\n    useMemo(\n      () => ({ handlers: [submitHandlers.onCompositionEnd, onCompositionEnd] }),\n      [submitHandlers.onCompositionEnd, onCompositionEnd],\n    ),\n  );\n\n  return (\n    <DesignSystemAntDConfigProvider>\n      <AntDInput.TextArea\n        {...addDebugOutlineIfEnabled()}\n        ref={ref}\n        autoComplete={autoComplete}\n        css={[\n          getInputEmotionStyles(classNamePrefix, theme, { validationState, useNewShadows, useNewBorderRadii }),\n          dangerouslyAppendEmotionCSS,\n        ]}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onKeyDown={onKeyDownChain}\n        onCompositionStart={onCompositionStartChain}\n        onCompositionEnd={onCompositionEndChain}\n        data-component-type={DesignSystemEventProviderComponentTypes.TextArea}\n        data-component-id={componentId}\n        {...props}\n        {...dangerouslySetAntdProps}\n      />\n    </DesignSystemAntDConfigProvider>\n  );\n});\n","import { Group } from './Group';\nimport { Input as OriginalInput, getInputStyles } from './Input';\nimport { Password } from './Password';\nimport { TextArea } from './TextArea';\n\nexport * from './common';\n\n// Properly creates the namespace and dot-notation components with correct types.\nconst InputNamespace = /* #__PURE__ */ Object.assign(OriginalInput, { TextArea, Password, Group });\n\nconst Input = InputNamespace;\n\nexport { Input, getInputStyles };\n"],"names":["SvgClockIcon","props","_jsxs","svg","xmlns","width","height","fill","viewBox","_jsx","path","d","fillRule","clipRule","ClockIcon","forwardRef","forwardedRef","Icon","ref","component","displayName","SvgLockIcon","LockIcon","SvgMegaphoneIcon","MegaphoneIcon","SvgSearchIcon","g","clipPath","defs","SearchIcon","SvgXCircleFillIcon","XCircleFillIcon","useCallbackOnEnter","callback","allowBasicEnter","allowPlatformEnter","isMacOs","useMemo","navigator","userAgent","includes","isComposing","useRef","onCompositionStart","useCallback","current","onCompositionEnd","onKeyDown","event","key","basicEnter","metaKey","ctrlKey","shiftKey","altKey","platformEnter","isValidEnterPress","getInputGroupStyling","clsPrefix","theme","useNewShadows","useNewBorderRadii","inputClass","buttonClass","css","display","flexGrow","borderTopRightRadius","borderBottomRightRadius","border","background","colors","actionDisabledBackground","borderRight","actionDisabledBorder","marginRight","boxShadow","borderTopLeftRadius","borderBottomLeftRadius","verticalAlign","borderLeft","backgroundColor","color","actionDisabledText","Group","dangerouslySetAntdProps","dangerouslyAppendEmotionCSS","compact","classNamePrefix","useDesignSystemTheme","useDesignSystemSafexFlags","DesignSystemAntDConfigProvider","AntDInput","addDebugOutlineIfEnabled","useCallbackOnceUntilReset","canTriggerRef","reset","callbackOnceUntilReset","useChainEventHandlers","handlers","stopOnDefaultPrevented","handler","defaultPrevented","getInputStyles","validationState","type","hasValue","useNewFormUISpacing","locked","useFocusWithin","affixClass","affixClassDisabled","affixClassFocused","clearIcon","prefixIcon","suffixIcon","validationColor","getValidationStateColor","focusSpecifier","styles","lineHeight","typography","lineHeightBase","minHeight","general","heightSm","borderColor","actionDefaultBorderDefault","actionPrimaryBackgroundHover","outlineColor","actionDefaultBorderFocus","outlineWidth","outlineOffset","outlineStyle","marginTop","spacing","sm","borderRadius","borders","borderRadiusSm","textPlaceholder","paddingTop","paddingBottom","fontSize","fontSizeSm","textSecondary","marginLeft","backgroundSecondary","textPrimary","getAnimationCss","options","enableAnimation","getInputEmotionStyles","importantify","Input","autoComplete","onChange","onClear","onFocus","onPressEnter","componentId","shouldPreventFormSubmission","analyticsEvents","readOnly","emitOnView","safex","formContext","useFormContext","setHasValue","React","useState","value","undefined","memoizedAnalyticsEvents","DesignSystemEventProviderAnalyticsEventTypes","OnValueChange","OnView","eventContext","useDesignSystemEventComponentCallbacks","componentType","DesignSystemEventProviderComponentTypes","valueHasNoPii","firstView","useEffect","onView","sendAnalyticsEventOncePerFocus","resetSendAnalyticsEventOnFocus","onValueChange","handleChange","e","target","nativeEvent","InputEvent","Boolean","handleFocus","onFormSubmit","formRef","preventDefault","requestSubmit","submitHandlers","onPressEnterChain","onCompositionStartChain","onCompositionEndChain","data-validation","suffix","dataComponentProps","Password","visibilityToggle","TextArea","allowFormSubmitOnEnter","handleSubmitForm","onKeyDownChain","data-component-type","data-component-id","InputNamespace","Object","assign","OriginalInput"],"mappings":"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"}