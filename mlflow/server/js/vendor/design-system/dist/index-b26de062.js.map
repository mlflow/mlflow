{"version":3,"file":"index-b26de062.js","sources":["../src/design-system/Icon/__generated/icons/ClockIcon.tsx","../src/design-system/Icon/__generated/icons/MegaphoneIcon.tsx","../src/design-system/Input/Group.tsx","../src/design-system/utils/useCallbackOnceUntilReset.ts","../src/design-system/Input/Input.tsx","../src/design-system/Input/Password.tsx","../src/design-system/Input/TextArea.tsx","../src/design-system/Input/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { forwardRef } from 'react';\nimport type { Ref } from 'react';\n\nimport type { IconProps } from '../../Icon';\nimport { Icon } from '../../Icon';\nfunction SvgClockIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 16 16\" {...props}>\n      <path fill=\"currentColor\" d=\"M7.25 4v4c0 .199.079.39.22.53l2 2 1.06-1.06-1.78-1.78V4z\" />\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0M1.5 8a6.5 6.5 0 1 1 13 0 6.5 6.5 0 0 1-13 0\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\nconst ClockIcon = forwardRef((props: IconProps, forwardedRef?: Ref<HTMLSpanElement>) => {\n  return <Icon ref={forwardedRef} {...props} component={SvgClockIcon} />;\n});\nClockIcon.displayName = 'ClockIcon';\nexport default ClockIcon;\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nimport type { Ref } from 'react';\n\nimport type { IconProps } from '../../Icon';\nimport { Icon } from '../../Icon';\nfunction SvgMegaphoneIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" fill=\"none\" viewBox=\"0 0 18 18\" {...props}>\n      <path\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        d=\"M16.25 2a.75.75 0 0 0-1.248-.56l-4.287 3.81H4A2.75 2.75 0 0 0 1.25 8v2A2.75 2.75 0 0 0 4 12.75h1.75V16a.75.75 0 0 0 1.5 0v-3.25h3.465l4.287 3.81A.75.75 0 0 0 16.25 16zm-4.752 4.56 3.252-2.89v10.66l-3.252-2.89a.75.75 0 0 0-.498-.19H4c-.69 0-1.25-.56-1.25-1.25V8c0-.69.56-1.25 1.25-1.25h7a.75.75 0 0 0 .498-.19\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\nconst MegaphoneIcon = forwardRef((props: IconProps, forwardedRef?: Ref<HTMLSpanElement>) => {\n  return <Icon ref={forwardedRef} {...props} component={SvgMegaphoneIcon} />;\n});\nMegaphoneIcon.displayName = 'MegaphoneIcon';\nexport default MegaphoneIcon;\n","import { css } from '@emotion/react';\nimport { Input as AntDInput } from 'antd';\n\nimport type { InputGroupProps } from './common';\nimport type { Theme } from '../../theme';\nimport { DesignSystemAntDConfigProvider } from '../DesignSystemProvider';\nimport { useDesignSystemTheme } from '../Hooks/useDesignSystemTheme';\nimport { addDebugOutlineIfEnabled } from '../utils/debug';\n\nconst getInputGroupStyling = (clsPrefix: string, theme: Theme) => {\n  const inputClass = `.${clsPrefix}-input`;\n  const buttonClass = `.${clsPrefix}-btn`;\n\n  return css({\n    display: 'inline-flex !important',\n    width: 'auto',\n\n    [`& > ${inputClass}`]: {\n      flexGrow: 1,\n      '&:disabled': {\n        border: 'none',\n        background: theme.colors.actionDisabledBackground,\n\n        '&:hover': {\n          borderRight: `1px solid ${theme.colors.actionDisabledBorder} !important`,\n        },\n      },\n\n      '&[data-validation]': {\n        marginRight: 0,\n      },\n    },\n\n    [`& > ${buttonClass} > span`]: {\n      verticalAlign: 'middle',\n    },\n\n    [`& > ${buttonClass}:disabled, & > ${buttonClass}:disabled:hover`]: {\n      borderLeft: `1px solid ${theme.colors.actionDisabledBorder} !important`,\n      backgroundColor: `${theme.colors.actionDisabledBackground} !important`,\n      color: `${theme.colors.actionDisabledText} !important`,\n    },\n  });\n};\n\nexport const Group = ({\n  dangerouslySetAntdProps,\n  dangerouslyAppendEmotionCSS,\n  compact = true,\n  ...props\n}: InputGroupProps) => {\n  const { classNamePrefix, theme } = useDesignSystemTheme();\n\n  return (\n    <DesignSystemAntDConfigProvider>\n      <AntDInput.Group\n        {...addDebugOutlineIfEnabled()}\n        css={[getInputGroupStyling(classNamePrefix, theme), dangerouslyAppendEmotionCSS]}\n        compact={compact}\n        {...props}\n        {...dangerouslySetAntdProps}\n      />\n    </DesignSystemAntDConfigProvider>\n  );\n};\n","import { useCallback, useRef } from 'react';\n\n/**\n * A React custom hook that allows a callback function to be executed exactly once until it is explicitly reset.\n *\n * Usage:\n *\n * const originalCallback = () => { console.log('originalCallback'); }\n * const { callbackOnceUntilReset, reset } = useCallbackOnceUntilReset(originalCallback);\n *\n * // To execute the callback\n * callbackOnceUntilReset(); // Prints 'originalCallback'\n * callbackOnceUntilReset(); // No effect for further calls\n * reset();\n * callbackOnceUntilReset(); // Prints 'originalCallback' again\n */\nconst useCallbackOnceUntilReset = <T>(callback: () => T) => {\n  const canTriggerRef = useRef(true);\n  const reset = useCallback(() => {\n    canTriggerRef.current = true;\n  }, []);\n\n  const callbackOnceUntilReset = useCallback(() => {\n    if (canTriggerRef.current) {\n      callback();\n      canTriggerRef.current = false;\n    }\n  }, [callback]);\n\n  return { callbackOnceUntilReset, reset };\n};\n\nexport { useCallbackOnceUntilReset };\n","import type { CSSObject, SerializedStyles } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport { Input as AntDInput } from 'antd';\nimport React, { forwardRef, useCallback, useMemo } from 'react';\n\nimport type { InputProps } from './common';\nimport {\n  DesignSystemEventProviderAnalyticsEventTypes,\n  DesignSystemEventProviderComponentTypes,\n  useDesignSystemEventComponentCallbacks,\n} from '../../design-system/DesignSystemEventProvider/DesignSystemEventProvider';\nimport type { Theme } from '../../theme';\nimport { DesignSystemAntDConfigProvider, getAnimationCss } from '../DesignSystemProvider';\nimport { useDesignSystemTheme } from '../Hooks/useDesignSystemTheme';\nimport type { ValidationState } from '../types';\nimport { getValidationStateColor, importantify } from '../utils/css-utils';\nimport { addDebugOutlineIfEnabled } from '../utils/debug';\nimport { safex } from '../utils/safex';\nimport { useCallbackOnceUntilReset } from '../utils/useCallbackOnceUntilReset';\n\ninterface InputStylesOptions {\n  useTransparent?: boolean;\n  useFocusWithin?: boolean;\n}\n\nexport const getInputStyles = (\n  clsPrefix: string,\n  theme: Theme,\n  { validationState, type, hasValue }: { validationState?: ValidationState; type?: string; hasValue?: boolean },\n  { useTransparent = false, useFocusWithin = false }: InputStylesOptions,\n): CSSObject => {\n  const inputClass = `.${clsPrefix}-input`;\n  const affixClass = `.${clsPrefix}-input-affix-wrapper`;\n  const affixClassDisabled = `.${clsPrefix}-input-affix-wrapper-disabled`;\n  const affixClassFocused = `.${clsPrefix}-input-affix-wrapper-focused`;\n  const clearIcon = `.${clsPrefix}-input-clear-icon`;\n  const prefixIcon = `.${clsPrefix}-input-prefix`;\n  const suffixIcon = `.${clsPrefix}-input-suffix`;\n\n  const validationColor = getValidationStateColor(theme, validationState);\n\n  const focusSpecifier = useFocusWithin ? 'focus-within' : 'focus';\n\n  const styles = {\n    '&&': {\n      lineHeight: theme.typography.lineHeightBase,\n      minHeight: theme.general.heightSm,\n      borderColor: theme.colors.actionDefaultBorderDefault,\n      ...(validationState && { borderColor: validationColor }),\n\n      '&:hover': {\n        borderColor: validationState ? validationColor : theme.colors.actionPrimaryBackgroundHover,\n      },\n\n      [`&:${focusSpecifier}`]: {\n        outlineColor: validationState ? validationColor : theme.colors.actionPrimaryBackgroundDefault,\n        outlineWidth: 2,\n        outlineOffset: -2,\n        outlineStyle: 'solid',\n        boxShadow: 'none',\n        borderColor: 'transparent',\n      },\n\n      '&:focus-visible': {\n        outlineColor: validationState ? validationColor : theme.colors.actionPrimaryBackgroundDefault,\n        outlineWidth: 2,\n        outlineOffset: -2,\n        outlineStyle: 'solid',\n        boxShadow: 'none',\n        borderColor: 'transparent',\n      },\n    },\n\n    [`&${inputClass}, ${inputClass}`]: {\n      ...(useTransparent && { backgroundColor: 'transparent' }),\n      '&:disabled': {\n        backgroundColor: theme.colors.actionDisabledBackground,\n        color: theme.colors.actionDisabledText,\n        borderColor: theme.colors.actionDisabledBorder,\n      },\n      '&::placeholder': {\n        color: theme.colors.textPlaceholder,\n      },\n    },\n\n    [`&${affixClass}`]: {\n      ...(useTransparent && { backgroundColor: 'transparent' }),\n      lineHeight: theme.typography.lineHeightBase,\n      paddingTop: 5,\n      paddingBottom: 5,\n      minHeight: theme.general.heightSm,\n\n      '::before': {\n        lineHeight: theme.typography.lineHeightBase,\n      },\n\n      '&:hover': {\n        borderColor: validationState ? validationColor : theme.colors.actionPrimaryBackgroundHover,\n      },\n\n      [`input.${clsPrefix}-input`]: {\n        borderRadius: 0,\n      },\n    },\n\n    [`&${affixClassDisabled}`]: {\n      backgroundColor: theme.colors.actionDisabledBackground,\n    },\n\n    [`&${affixClassFocused}`]: {\n      boxShadow: 'none',\n      [`&&, &:${focusSpecifier}`]: {\n        outlineColor: validationState ? validationColor : theme.colors.actionPrimaryBackgroundDefault,\n        outlineWidth: 2,\n        outlineOffset: -2,\n        outlineStyle: 'solid',\n        boxShadow: 'none',\n        borderColor: 'transparent',\n      },\n    },\n\n    [clearIcon]: {\n      fontSize: theme.typography.fontSizeSm,\n    },\n\n    [prefixIcon]: {\n      marginRight: theme.spacing.sm,\n      color: theme.colors.textSecondary,\n    },\n\n    [suffixIcon]: {\n      marginLeft: theme.spacing.sm,\n      color: theme.colors.textSecondary,\n\n      ...(!hasValue &&\n        type === 'number' && {\n          display: 'none',\n        }),\n    },\n\n    ...getAnimationCss(theme.options.enableAnimation),\n  };\n\n  return styles;\n};\n\nexport const getInputEmotionStyles = (\n  clsPrefix: string,\n  theme: Theme,\n  { validationState, type, hasValue }: { validationState?: ValidationState; type?: string; hasValue?: boolean },\n  useTransparent?: boolean,\n): SerializedStyles => {\n  const styles = getInputStyles(clsPrefix, theme, { validationState, type, hasValue }, { useTransparent });\n  return css(importantify(styles));\n};\n\nexport const Input = forwardRef<AntDInput, InputProps>(function Input(\n  {\n    validationState,\n    autoComplete = 'off',\n    dangerouslySetAntdProps,\n    dangerouslyAppendEmotionCSS,\n    onChange,\n    onClear,\n    onFocus,\n    componentId,\n    analyticsEvents = [DesignSystemEventProviderAnalyticsEventTypes.OnValueChange],\n    ...props\n  },\n  ref,\n) {\n  const { classNamePrefix, theme } = useDesignSystemTheme();\n  const [hasValue, setHasValue] = React.useState(\n    props.value !== undefined && props.value !== null && props.value !== '',\n  );\n  const useTransparent = safex('databricks.fe.designsystem.useTransparentInput', false);\n  const memoizedAnalyticsEvents = useMemo(() => analyticsEvents, [analyticsEvents]);\n  const eventContext = useDesignSystemEventComponentCallbacks({\n    componentType: DesignSystemEventProviderComponentTypes.Input,\n    componentId,\n    analyticsEvents: memoizedAnalyticsEvents,\n    valueHasNoPii: false,\n  });\n\n  // Prevents multiple onValueChange triggers until after a focus event resets it.\n  const { callbackOnceUntilReset: sendAnalyticsEventOncePerFocus, reset: resetSendAnalyticsEventOnFocus } =\n    useCallbackOnceUntilReset(eventContext.onValueChange);\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      sendAnalyticsEventOncePerFocus();\n      // If the input is cleared, call the onClear handler, but only\n      // if the event is not an input event -- which is the case when you click the\n      // ant-provided (X) button.\n      if (!e.target.value && e.nativeEvent instanceof InputEvent === false && onClear) {\n        onClear?.();\n        setHasValue(false);\n      } else {\n        onChange?.(e);\n        setHasValue(Boolean(e.target.value));\n      }\n    },\n    [onChange, onClear, sendAnalyticsEventOncePerFocus],\n  );\n\n  const handleFocus = useCallback(\n    (e: React.FocusEvent<HTMLInputElement>) => {\n      resetSendAnalyticsEventOnFocus();\n      onFocus?.(e);\n    },\n    [onFocus, resetSendAnalyticsEventOnFocus],\n  );\n\n  return (\n    <DesignSystemAntDConfigProvider>\n      <AntDInput\n        {...addDebugOutlineIfEnabled()}\n        autoComplete={autoComplete}\n        data-validation={validationState}\n        ref={ref}\n        css={[\n          getInputEmotionStyles(\n            classNamePrefix,\n            theme,\n            { validationState, type: props.type, hasValue },\n            useTransparent,\n          ),\n          dangerouslyAppendEmotionCSS,\n        ]}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        {...props}\n        {...dangerouslySetAntdProps}\n        data-component-type={DesignSystemEventProviderComponentTypes.Input}\n        data-component-id={componentId}\n      />\n    </DesignSystemAntDConfigProvider>\n  );\n});\n","import { Input as AntDInput } from 'antd';\nimport React, { forwardRef } from 'react';\n\nimport { getInputEmotionStyles } from './Input';\nimport type { PasswordProps } from './common';\nimport { DesignSystemAntDConfigProvider } from '../DesignSystemProvider';\nimport { useDesignSystemTheme } from '../Hooks/useDesignSystemTheme';\nimport { addDebugOutlineIfEnabled } from '../utils/debug';\nimport { safex } from '../utils/safex';\n\nexport const Password: React.FC<PasswordProps> = forwardRef<AntDInput, PasswordProps>(function Password(\n  { validationState, autoComplete = 'off', dangerouslySetAntdProps, dangerouslyAppendEmotionCSS, ...props },\n  ref,\n) {\n  const { classNamePrefix, theme } = useDesignSystemTheme();\n  const useTransparent = safex('databricks.fe.designsystem.useTransparentInput', false);\n\n  return (\n    <DesignSystemAntDConfigProvider>\n      <AntDInput.Password\n        {...addDebugOutlineIfEnabled()}\n        visibilityToggle={false}\n        ref={ref}\n        autoComplete={autoComplete}\n        css={[\n          getInputEmotionStyles(classNamePrefix, theme, { validationState }, useTransparent),\n          dangerouslyAppendEmotionCSS,\n        ]}\n        {...props}\n        {...dangerouslySetAntdProps}\n      />\n    </DesignSystemAntDConfigProvider>\n  );\n});\n","import { Input as AntDInput } from 'antd';\nimport type { TextAreaRef } from 'antd/lib/input/TextArea';\nimport { forwardRef, useCallback, useMemo, useRef } from 'react';\n\nimport { getInputEmotionStyles } from './Input';\nimport type { TextAreaProps } from './common';\nimport { useFormContext } from '../../development/Form';\nimport {\n  DesignSystemEventProviderAnalyticsEventTypes,\n  DesignSystemEventProviderComponentTypes,\n  useDesignSystemEventComponentCallbacks,\n} from '../DesignSystemEventProvider/DesignSystemEventProvider';\nimport { DesignSystemAntDConfigProvider } from '../DesignSystemProvider';\nimport { useDesignSystemTheme } from '../Hooks/useDesignSystemTheme';\nimport { addDebugOutlineIfEnabled } from '../utils/debug';\nimport { safex } from '../utils/safex';\nimport { useCallbackOnceUntilReset } from '../utils/useCallbackOnceUntilReset';\n\nexport const TextArea = forwardRef<TextAreaRef, TextAreaProps>(function TextArea(\n  {\n    validationState,\n    autoComplete = 'off',\n    dangerouslySetAntdProps,\n    dangerouslyAppendEmotionCSS,\n    componentId,\n    analyticsEvents = [DesignSystemEventProviderAnalyticsEventTypes.OnValueChange],\n    onChange,\n    onFocus,\n    onKeyDown,\n    onCompositionStart,\n    onCompositionEnd,\n    allowFormSubmitOnEnter = false,\n    ...props\n  },\n  ref,\n) {\n  const formContext = useFormContext();\n  const isMacOs = useMemo(() => navigator.userAgent.includes('Mac'), []);\n  const isCompositing = useRef<boolean>(false);\n  const { classNamePrefix, theme } = useDesignSystemTheme();\n  const useTransparent = safex('databricks.fe.designsystem.useTransparentInput', false);\n  const memoizedAnalyticsEvents = useMemo(() => analyticsEvents, [analyticsEvents]);\n  const eventContext = useDesignSystemEventComponentCallbacks({\n    componentType: DesignSystemEventProviderComponentTypes.TextArea,\n    componentId,\n    analyticsEvents: memoizedAnalyticsEvents,\n    valueHasNoPii: false,\n  });\n\n  // Prevents multiple onValueChange triggers until after a focus event resets it.\n  const { callbackOnceUntilReset: sendAnalyticsEventOncePerFocus, reset: resetSendAnalyticsEventOnFocus } =\n    useCallbackOnceUntilReset(eventContext.onValueChange);\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      sendAnalyticsEventOncePerFocus();\n      onChange?.(e);\n    },\n    [onChange, sendAnalyticsEventOncePerFocus],\n  );\n\n  const handleFocus = useCallback(\n    (e: React.FocusEvent<HTMLTextAreaElement>) => {\n      resetSendAnalyticsEventOnFocus();\n      onFocus?.(e);\n    },\n    [onFocus, resetSendAnalyticsEventOnFocus],\n  );\n\n  const onKeyDownWrapper = useCallback<React.KeyboardEventHandler<HTMLTextAreaElement>>(\n    (event) => {\n      // Trigger a form submission if its within a form context and the enter combination is pressed and is not in composition mode.\n      const basicEnter =\n        event.key === 'Enter' &&\n        allowFormSubmitOnEnter &&\n        !event.metaKey &&\n        !event.ctrlKey &&\n        !event.shiftKey &&\n        !event.altKey;\n      const platformEnter = event.key === 'Enter' && (isMacOs ? event.metaKey : event.ctrlKey);\n      if (formContext.formRef?.current && (basicEnter || platformEnter) && !isCompositing.current) {\n        event.preventDefault();\n        formContext.formRef.current.requestSubmit();\n        return;\n      }\n\n      onKeyDown?.(event);\n    },\n    [allowFormSubmitOnEnter, formContext.formRef, isMacOs, onKeyDown],\n  );\n\n  const onCompositionStartWrapper = useCallback<React.CompositionEventHandler<HTMLTextAreaElement>>(\n    (event) => {\n      isCompositing.current = true;\n      onCompositionStart?.(event);\n    },\n    [onCompositionStart],\n  );\n\n  const onCompositionEndWrapper = useCallback<React.CompositionEventHandler<HTMLTextAreaElement>>(\n    (event) => {\n      isCompositing.current = false;\n      onCompositionEnd?.(event);\n    },\n    [onCompositionEnd],\n  );\n\n  return (\n    <DesignSystemAntDConfigProvider>\n      <AntDInput.TextArea\n        {...addDebugOutlineIfEnabled()}\n        ref={ref}\n        autoComplete={autoComplete}\n        css={[\n          getInputEmotionStyles(classNamePrefix, theme, { validationState }, useTransparent),\n          dangerouslyAppendEmotionCSS,\n        ]}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onKeyDown={onKeyDownWrapper}\n        onCompositionStart={onCompositionStartWrapper}\n        onCompositionEnd={onCompositionEndWrapper}\n        data-component-type={DesignSystemEventProviderComponentTypes.TextArea}\n        data-component-id={componentId}\n        {...props}\n        {...dangerouslySetAntdProps}\n      />\n    </DesignSystemAntDConfigProvider>\n  );\n});\n","import { Group } from './Group';\nimport { Input as OriginalInput, getInputStyles } from './Input';\nimport { Password } from './Password';\nimport { TextArea } from './TextArea';\n\nexport * from './common';\n\n// Properly creates the namespace and dot-notation components with correct types.\nconst InputNamespace = /* #__PURE__ */ Object.assign(OriginalInput, { TextArea, Password, Group });\n\nconst Input = InputNamespace;\n\nexport { Input, getInputStyles };\n"],"names":["SvgClockIcon","props","_jsxs","xmlns","width","height","fill","viewBox","children","_jsx","d","fillRule","clipRule","ClockIcon","forwardRef","forwardedRef","Icon","ref","component","displayName","SvgMegaphoneIcon","MegaphoneIcon","getInputGroupStyling","clsPrefix","theme","inputClass","buttonClass","css","display","flexGrow","border","background","colors","actionDisabledBackground","borderRight","actionDisabledBorder","marginRight","verticalAlign","borderLeft","backgroundColor","color","actionDisabledText","process","env","NODE_ENV","Group","_ref","dangerouslySetAntdProps","dangerouslyAppendEmotionCSS","compact","classNamePrefix","useDesignSystemTheme","DesignSystemAntDConfigProvider","AntDInput","addDebugOutlineIfEnabled","useCallbackOnceUntilReset","callback","canTriggerRef","useRef","reset","useCallback","current","callbackOnceUntilReset","getInputStyles","_ref2","validationState","type","hasValue","useTransparent","useFocusWithin","affixClass","affixClassDisabled","affixClassFocused","clearIcon","prefixIcon","suffixIcon","validationColor","getValidationStateColor","focusSpecifier","styles","lineHeight","typography","lineHeightBase","minHeight","general","heightSm","borderColor","actionDefaultBorderDefault","actionPrimaryBackgroundHover","outlineColor","actionPrimaryBackgroundDefault","outlineWidth","outlineOffset","outlineStyle","boxShadow","textPlaceholder","paddingTop","paddingBottom","borderRadius","fontSize","fontSizeSm","spacing","sm","textSecondary","marginLeft","getAnimationCss","options","enableAnimation","getInputEmotionStyles","_ref3","importantify","Input","_ref4","autoComplete","onChange","onClear","onFocus","componentId","analyticsEvents","DesignSystemEventProviderAnalyticsEventTypes","OnValueChange","setHasValue","React","useState","value","undefined","safex","memoizedAnalyticsEvents","useMemo","eventContext","useDesignSystemEventComponentCallbacks","componentType","DesignSystemEventProviderComponentTypes","valueHasNoPii","sendAnalyticsEventOncePerFocus","resetSendAnalyticsEventOnFocus","onValueChange","handleChange","e","target","nativeEvent","InputEvent","Boolean","handleFocus","Password","visibilityToggle","TextArea","onKeyDown","onCompositionStart","onCompositionEnd","allowFormSubmitOnEnter","formContext","useFormContext","isMacOs","navigator","userAgent","includes","isCompositing","onKeyDownWrapper","event","_formContext$formRef","basicEnter","key","metaKey","ctrlKey","shiftKey","altKey","platformEnter","formRef","preventDefault","requestSubmit","onCompositionStartWrapper","onCompositionEndWrapper","InputNamespace","Object","assign","OriginalInput"],"mappings":"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"}