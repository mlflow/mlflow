import fs from 'fs';
import path from 'path';

import _ from 'lodash';

import { primitiveColors } from '../../src/theme/_generated/PrimitiveColors';
import { lightColorList } from '../../src/theme/_generated/SemanticColors-Light';

// eslint-disable-next-line no-console -- TODO(FEINF-3587)
console.log('Generating ValidSemanticColors.ts...');

const semanticColorList = `
// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

export enum ValidSemanticColors {
  ${Object.keys(lightColorList)
    .sort()
    // PascalCase enum key -> camelCase enum value
    .map((key) => `${_.upperFirst(_.camelCase(key))} = '${_.camelCase(key)}'`)
    .join(',\n  ')}
}
`;

const generatedDir = process.env.THEME_GENERATED_DIR || path.resolve(__dirname, '../../src/theme/_generated');
const filePath = path.join(generatedDir, 'ValidSemanticColors.ts');
fs.writeFileSync(filePath, semanticColorList);

// eslint-disable-next-line no-console -- TODO(FEINF-3587)
console.log('Generating ValidPrimitiveColors.ts...');

const primitiveColorList = `
// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

export enum ValidPrimitiveColors {
  ${Object.keys(primitiveColors)
    .sort()
    // PascalCase enum key -> camelCase enum value
    .map((key) => `${_.upperFirst(_.camelCase(key))} = '${_.camelCase(key)}'`)
    .join(',\n  ')}
}
`;

const filePath2 = path.join(generatedDir, 'ValidPrimitiveColors.ts');
fs.writeFileSync(filePath2, primitiveColorList);
