// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal.proto

package org.mlflow.internal.proto;

public final class Internal {
  private Internal() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Types of vertices represented in MLflow Run Inputs. Valid vertices are MLflow objects that can
   * have an input relationship.
   * </pre>
   *
   * Protobuf enum {@code mlflow.internal.InputVertexType}
   */
  public enum InputVertexType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RUN = 1;</code>
     */
    RUN(1),
    /**
     * <code>DATASET = 2;</code>
     */
    DATASET(2),
    /**
     * <code>MODEL = 3;</code>
     */
    MODEL(3),
    ;

    /**
     * <code>RUN = 1;</code>
     */
    public static final int RUN_VALUE = 1;
    /**
     * <code>DATASET = 2;</code>
     */
    public static final int DATASET_VALUE = 2;
    /**
     * <code>MODEL = 3;</code>
     */
    public static final int MODEL_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static InputVertexType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static InputVertexType forNumber(int value) {
      switch (value) {
        case 1: return RUN;
        case 2: return DATASET;
        case 3: return MODEL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<InputVertexType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        InputVertexType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<InputVertexType>() {
            public InputVertexType findValueByNumber(int number) {
              return InputVertexType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.mlflow.internal.proto.Internal.getDescriptor().getEnumTypes().get(0);
    }

    private static final InputVertexType[] VALUES = values();

    public static InputVertexType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private InputVertexType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mlflow.internal.InputVertexType)
  }

  /**
   * <pre>
   * Types of vertices represented in MLflow Run Outputs. Valid vertices are MLflow objects that can
   * have an output relationship.
   * </pre>
   *
   * Protobuf enum {@code mlflow.internal.OutputVertexType}
   */
  public enum OutputVertexType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RUN_OUTPUT = 1;</code>
     */
    RUN_OUTPUT(1),
    /**
     * <code>MODEL_OUTPUT = 2;</code>
     */
    MODEL_OUTPUT(2),
    ;

    /**
     * <code>RUN_OUTPUT = 1;</code>
     */
    public static final int RUN_OUTPUT_VALUE = 1;
    /**
     * <code>MODEL_OUTPUT = 2;</code>
     */
    public static final int MODEL_OUTPUT_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OutputVertexType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OutputVertexType forNumber(int value) {
      switch (value) {
        case 1: return RUN_OUTPUT;
        case 2: return MODEL_OUTPUT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OutputVertexType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OutputVertexType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OutputVertexType>() {
            public OutputVertexType findValueByNumber(int number) {
              return OutputVertexType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.mlflow.internal.proto.Internal.getDescriptor().getEnumTypes().get(1);
    }

    private static final OutputVertexType[] VALUES = values();

    public static OutputVertexType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OutputVertexType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:mlflow.internal.OutputVertexType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016internal.proto\022\017mlflow.internal\032\025scala" +
      "pb/scalapb.proto*2\n\017InputVertexType\022\007\n\003R" +
      "UN\020\001\022\013\n\007DATASET\020\002\022\t\n\005MODEL\020\003*4\n\020OutputVe" +
      "rtexType\022\016\n\nRUN_OUTPUT\020\001\022\020\n\014MODEL_OUTPUT" +
      "\020\002B#\n\031org.mlflow.internal.proto\220\001\001\342?\002\020\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.mlflow.scalapb_interface.Scalapb.getDescriptor(),
        });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(org.mlflow.scalapb_interface.Scalapb.options);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    org.mlflow.scalapb_interface.Scalapb.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
