syntax = "proto2";

package mlflow.ucmodelregistry;

import "scalapb/scalapb.proto";
import "databricks.proto";

option java_package = "com.databricks.api.proto.ucmodelregistry";
option java_generate_equals_and_hash = true;
option (scalapb.options) = {
  flat_package: true,
};

message RegisteredModel {
  // Unique name for the model.
  optional string name = 1;

  // Timestamp recorded when this ``registered_model`` was created.
  optional int64 creation_timestamp = 2;

  // Timestamp recorded when metadata for this ``registered_model`` was last updated.
  optional int64 last_updated_timestamp = 3;

  // User that created this ``registered_model``
  optional string user_id = 4;

  // Description of this ``registered_model``.
  optional string description = 5;

  // Registered Model Aliases on this model.
  repeated RegisteredModelAlias aliases = 6;

  // Tags associated with this model.
  repeated RegisteredModelTag tags = 7;
}

message RegisteredModelAlias {
  // The name of the alias
  optional string alias = 1;

  // Model version number that the alias references.
  optional string version = 2;
}

message RegisteredModelTag {
  // Name (key) of the tag.
  optional string key = 1;

  // Value of the tag associated with the key, could be empty
  optional string value = 2;
}

message ModelVersionTag {
  // Name (key) of the tag.
  optional string key = 1;

  // Value of the tag associated with the key, could be empty
  optional string value = 2;
}

enum ModelVersionStatus {
  // Unspecified enum value
  UNSPECIFIED = 0;

  // Request to register a new model version is pending as server performs background tasks.
  PENDING_REGISTRATION = 1;

  // Request to register a new model version has failed.
  FAILED_REGISTRATION = 2;

  // Model version is ready for use.
  READY = 3;
}

message ModelVersion {
  // Unique name of the model
  optional string name = 1;

  // Model's version number.
  optional string version = 2;

  // Timestamp recorded when this ``model_version`` was created.
  optional int64 creation_timestamp = 3;

  // Timestamp recorded when metadata for this ``model_version`` was last updated.
  optional int64 last_updated_timestamp = 4;

  // User that created this ``model_version``.
  optional string user_id = 5;

  // Description of this ``model_version``.
  optional string description = 6;

  // URI indicating the location of the source model artifacts, used when creating ``model_version``
  optional string source = 7;

  // MLflow run ID used when creating ``model_version``, if ``source`` was generated by an
  // experiment run stored in MLflow tracking server.
  optional string run_id = 8;

  // ID of the MLflow experiment containing the MLflow run that generated this model version
  optional string run_experiment_id = 9;

  // Optional tracking server ID (e.g. Databricks workspace ID) of the source run
  optional string run_tracking_server_id = 10;

  // Current status of ``model_version``
  optional ModelVersionStatus status = 11;

  // Details on current ``status``, if it is pending or failed.
  optional string status_message = 12;

  // Current storage location of model version files, e.g. in blob storage
  optional string storage_location = 13;

  // Registered Model Aliases on this model version.
  repeated RegisteredModelAlias aliases = 14;

  // Tags associated with this model version.
  repeated ModelVersionTag tags = 15;
}

enum ModelVersionOperation {
  MODEL_VERSION_OPERATION_UNSPECIFIED = 0;
  MODEL_VERSION_OPERATION_READ = 1;
  MODEL_VERSION_OPERATION_READ_WRITE = 2;
}

// An object encapsulates temporary credentials for cloud API authentication. The temporary
// credentials usually are short-lived with expiration time.
message TemporaryCredentials {
  oneof credentials {
    AwsCredentials aws_temp_credentials = 2;
    AzureUserDelegationSAS azure_user_delegation_sas = 3;
    GcpOauthToken gcp_oauth_token = 4;
    R2Credentials r2_temp_credentials = 5;
  }

  // Server time when the credential will expire, in epoch milliseconds.
  // The API client is advised to cache the credential given this expiration time.
  optional int64 expiration_time = 1;

  optional StorageMode storage_mode = 6;

  optional EncryptionDetails encryption_details = 7;
}

// AWS temporary credentials for API authentication.
// Read more at https://docs.aws.amazon.com/STS/latest/APIReference/API_Credentials.html.
message AwsCredentials {
  // The access key ID that identifies the temporary credentials.
  optional string access_key_id = 1;

  // The secret access key that can be used to sign AWS API requests.
  optional string secret_access_key = 2;

  // The token that users must pass to AWS API to use the temporary credentials.
  optional string session_token = 3;
}

// Azure temporary credentials for API authentication.
// Read more at https://docs.microsoft.com/en-us/rest/api/storageservices/create-user-delegation-sas
message AzureUserDelegationSAS {
  // The signed URI (SAS Token) used to access blob services for a given path
  optional string sas_token = 1;
}

// GCP temporary credentials for API authentication.
// Read more at https://developers.google.com/identity/protocols/oauth2/service-account
message GcpOauthToken {
  optional string oauth_token = 1;
}

// R2 temporary credentials for API authentication.
// Read more at https://developers.cloudflare.com/r2/api/s3/tokens/.
message R2Credentials {
  // The access key ID that identifies the temporary credentials.
  optional string access_key_id = 1;

  // The secret access key associated with the access key.
  optional string secret_access_key = 2;

  // The generated JWT that users must pass to use the temporary credentials.
  optional string session_token = 3;
}

enum StorageMode {
  STORAGE_MODE_UNSPECIFIED = 0;
  // The storage resources of the workspace are hosted by customers.
  CUSTOMER_HOSTED = 1;
  // Default storage
  DEFAULT_STORAGE = 2;
}

message EncryptionDetails {
  oneof encryption_details_type {
    // Details for CLOUD_MANAGED_SSE_KEYS:
    SseEncryptionDetails sse_encryption_details = 1;
  }
}

enum SseEncryptionAlgorithm {
  SSE_ENCRYPTION_ALGORITHM_UNSPECIFIED = 0;
  AWS_SSE_KMS = 2;   // "aws:kms" in x-amz-server-side-encryption' header
}

message SseEncryptionDetails {
  optional SseEncryptionAlgorithm algorithm = 1;

  // Optional. The ARN of the SSE-KMS key used with the S3 location, when algorithm = "SSE-KMS".
  // Sets the value of the 'x-amz-server-side-encryption-aws-kms-key-id' header.
  optional string aws_kms_key_arn = 2;
}

message CreateRegisteredModelRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[CreateRegisteredModelResponse]";

  // Register models under this name
  optional string name = 1 [(validate_required) = true];

  // Tags associated with registered model.
  repeated RegisteredModelTag tags = 2;

  // Optional description for registered model.
  optional string description = 3;
}

message CreateRegisteredModelResponse {
  optional RegisteredModel registered_model = 1;
}

message UpdateRegisteredModelRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[UpdateRegisteredModelResponse]";

  // Registered model unique name identifier.
  optional string name = 1 [(validate_required) = true];

  // If provided, will rename this ``registered_model`` to the new name provided.
  optional string new_name = 3;

  // If provided, updates the description for this ``registered_model``.
  optional string description = 2;
}

message UpdateRegisteredModelResponse {
  optional RegisteredModel registered_model = 1;
}

message DeleteRegisteredModelRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[DeleteRegisteredModelResponse]";

  // Registered model unique name identifier.
  optional string name = 1 [(validate_required) = true];
}

message DeleteRegisteredModelResponse {
}

message GetRegisteredModelRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[GetRegisteredModelResponse]";

  // Registered model unique name identifier.
  optional string name = 1 [(validate_required) = true];
}

message GetRegisteredModelResponse {
  optional RegisteredModel registered_model = 1;
}

message SearchRegisteredModelsRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[SearchRegisteredModelsResponse]";

  // Maximum number of models desired. Default is 100. Max threshold is 1000.
  optional int64 max_results = 1 [default = 100];

  // Pagination token to go to the next page based on a previous search query.
  optional string page_token = 2;
}

message SearchRegisteredModelsResponse {
  // Registered Models that match the search criteria.
  repeated RegisteredModel registered_models = 1;

  // Pagination token to request the next page of models.
  optional string next_page_token = 2;
}

enum DependencyType {
  DEPENDENCY_TYPE_UNSPECIFIED = 0;
  DATABRICKS_VECTOR_INDEX = 1;
  DATABRICKS_MODEL_ENDPOINT = 2;
  DATABRICKS_UC_FUNCTION = 3;
  DATABRICKS_UC_CONNECTION = 4;
}

message Dependency {
  optional DependencyType type = 1;
  optional string name = 2;
}

message CreateModelVersionRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[CreateModelVersionResponse]";

  // Register model under this name
  optional string name = 1 [(validate_required) = true];

  // URI indicating the location of the model artifacts.
  optional string source = 2 [(validate_required) = true];

  // MLflow run ID for correlation, if ``source`` was generated by an experiment run in
  // MLflow tracking server
  optional string run_id = 3;

  // Optional description for model version.
  optional string description = 4;

  // Optional tracking server ID (e.g. Databricks workspace ID) of the source run
  optional string run_tracking_server_id = 5;

  // Optional field to list features the model depends on
  optional string feature_deps = 6;

  // Tags associated with model version.
  repeated ModelVersionTag tags = 7;

  // Additional dependencies to pass to createModelVersion including VectorSearch and Embedding endpoints
  repeated Dependency model_version_dependencies = 8;
}

message CreateModelVersionResponse {
  // Return new version number generated for this model in registry.
  optional ModelVersion model_version = 1;
}

message UpdateModelVersionRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[UpdateModelVersionResponse]";

  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Model version number
  optional string version = 2 [(validate_required) = true];

  // If provided, updates the description for this ``registered_model``.
  optional string description = 3;
}

message UpdateModelVersionResponse {
  // Return new version number generated for this model in registry.
  optional ModelVersion model_version = 1;
}

message DeleteModelVersionRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[DeleteModelVersionResponse]";

  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Model version number
  optional string version = 2 [(validate_required) = true];
}

message DeleteModelVersionResponse {
}

message GetModelVersionRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[GetModelVersionResponse]";

  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Model version number
  optional string version = 2 [(validate_required) = true];
}

message GetModelVersionResponse {
  optional ModelVersion model_version = 1;
}

message SearchModelVersionsRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[SearchModelVersionsResponse]";

  // String filter condition, like "name='my-model-name'". Must be a single boolean condition,
  // with string values wrapped in single quotes.
  optional string filter = 1;

  // Maximum number of models desired. Max threshold is 10K.
  optional int64 max_results = 2 [default = 10000];

  // Pagination token to go to next page based on previous search query.
  optional string page_token = 3;
}

message SearchModelVersionsResponse {
  // Models that match the search criteria
  repeated ModelVersion model_versions = 1;

  // Pagination token to request next page of models for the same search query.
  optional string next_page_token = 2;
}

message GenerateTemporaryModelVersionCredentialsRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[GenerateTemporaryModelVersionCredentialsResponse]";
  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Model version number
  optional string version = 2 [(validate_required) = true];

  // Required. Type of operation (read or write) to perform on the model version
  // Note that model version files can only be written at creation time
  optional ModelVersionOperation operation = 3 [(validate_required) = true];

}

message GenerateTemporaryModelVersionCredentialsResponse {
  // Temporary credentials for model version read/write
  optional TemporaryCredentials credentials = 1;
}

message GetModelVersionDownloadUriRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[GetModelVersionDownloadUriResponse]";
  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Model version number
  optional string version = 2 [(validate_required) = true];
}


message GetModelVersionDownloadUriResponse {
  // URI corresponding to where artifacts for this model version are stored.
  optional string artifact_uri = 1;
}

message FinalizeModelVersionRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[FinalizeModelVersionResponse]";
  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Model version number
  optional string version = 2 [(validate_required) = true];
}


message FinalizeModelVersionResponse {
  optional ModelVersion model_version = 1;
}

message SetRegisteredModelAliasRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[SetRegisteredModelAliasResponse]";

  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Name of the registered model alias
  optional string alias = 2 [(validate_required) = true];

  // Model version number that alias will reference
  optional string version = 3 [(validate_required) = true];
}

message SetRegisteredModelAliasResponse {
}

message DeleteRegisteredModelAliasRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[DeleteRegisteredModelAliasResponse]";

  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Name of the registered model alias
  optional string alias = 2 [(validate_required) = true];
}

message DeleteRegisteredModelAliasResponse {
}

message SetRegisteredModelTagRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[SetRegisteredModelTagResponse]";

  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Name (key) of the tag
  optional string key = 2 [(validate_required) = true];

  // Value of the tag associated with the key, could be empty
  optional string value = 3;
}

message SetRegisteredModelTagResponse {
}

message DeleteRegisteredModelTagRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[DeleteRegisteredModelTagResponse]";

  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Name (key) of the tag
  optional string key = 2 [(validate_required) = true];
}

message DeleteRegisteredModelTagResponse {
}

message SetModelVersionTagRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[SetModelVersionTagResponse]";

  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Model version number
  optional string version = 2 [(validate_required) = true];

  // Name (key) of the tag
  optional string key = 3 [(validate_required) = true];

  // Value of the tag associated with the key, could be empty
  optional string value = 4;
}

message SetModelVersionTagResponse {
}

message DeleteModelVersionTagRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[DeleteModelVersionTagResponse]";

  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Model version number
  optional string version = 2 [(validate_required) = true];

  // Name (key) of the tag
  optional string key = 3 [(validate_required) = true];
}

message DeleteModelVersionTagResponse {
}

message GetModelVersionByAliasRequest {
  option (scalapb.message).extends = "com.databricks.rpc.RPC[GetModelVersionByAliasResponse]";

  // Name of the registered model
  optional string name = 1 [(validate_required) = true];

  // Name of the registered model alias
  optional string alias = 2 [(validate_required) = true];
}

message GetModelVersionByAliasResponse {
  optional ModelVersion model_version = 1;
}

// Lineage kafka protos
message Entity {
  oneof value {
    Job job = 1;
    Notebook notebook = 2;
    Pipeline pipeline = 3;
  }
}

message Pipeline {
  optional string pipeline_id = 1;
  optional string pipeline_update_id = 2;
}

message Job {
  optional string id = 1;
  optional string task_key = 2;
  optional string job_run_id = 3;
  optional string task_run_id = 4;
}

message Notebook {
  optional string id = 1;
  optional string command_id = 2;
  optional string notebook_run_id = 3;
}

enum TableType {
    TABLE = 0;
    PERSISTED_VIEW = 1;
    TEMP_VIEW = 2;
    MATERIALIZED_VIEW = 3;
    STREAMING_LIVE_TABLE = 4;
    PATH = 5;
}

message Table {
    optional string name = 1;
    optional TableType table_type = 2;
    optional string location = 3;
    optional string table_id = 4;
}

message Securable {
    oneof value {
        Table table = 1;
    }
}

message Lineage {
    optional Securable target_securable = 4;
    repeated Securable source_securables = 5;
}

message LineageHeaderInfo {
  repeated Entity entities = 1;
  repeated Lineage lineages = 2;
}
