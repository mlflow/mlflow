syntax = "proto2";
package mlflow.genai.experimental;

message Span {
  // A unique identifier for a trace.
  optional string trace_id = 1;

  // A unique identifier for a span within a trace.
  optional string span_id = 2;

  // Conveys information about request position in multiple distributed tracing graphs.
  optional string trace_state = 3;

  // The span_id of this span's parent span. If this is a root span, then this field may be empty.
  optional string parent_span_id = 4;

  // Flags, a bit field.
  optional int32 flags = 5;

  // A description of the span's operation.
  optional string name = 6;

  // SpanKind represented as string ("INTERNAL", "SERVER", "CLIENT", etc).
  optional string kind = 7;

  // Start time of the span in nanoseconds since epoch.
  optional int64 start_time_unix_nano = 8;

  // End time of the span in nanoseconds since epoch.
  optional int64 end_time_unix_nano = 9;

  // JSON string representation of attributes.
  map<string, string> attributes = 10;

  // The number of attributes that were discarded.
  optional int32 dropped_attributes_count = 11;

  // Events that occurred during the span.
  message Event {
    // The time the event occurred in nanoseconds since epoch.
    optional int64 time_unix_nano = 1;
    
    // The name of the event.
    optional string name = 2;

    // The attributes of the event.
    map<string, string> attributes = 3;

    // The number of attributes that were discarded.
    optional int32 dropped_attributes_count = 4;
  }

  repeated Event events = 12;

  // The number of dropped events.
  optional int32 dropped_events_count = 13;

  // Links to another span within a trace or to a different trace.
  message Link {
    // A unique identifier for a trace.
    optional string trace_id = 1;

    // A unique identifier for a span within a trace.
    optional string span_id = 2;

    // Conveys information about request position in multiple distributed tracing graphs.
    optional string trace_state = 3;

    // The attributes of the link.
    map<string, string> attributes = 4;

    // The number of attributes that were discarded.
    optional int32 dropped_attributes_count = 5;

    // Flags, a bit field.
    optional int32 flags = 6;
  }

  repeated Link links = 14;

  // The number of dropped links.
  optional int32 dropped_links_count = 15;

  // Status of the span
  message Status {
    // The message of the status.
    optional string message = 1;

    // The code of the status.
    optional string code = 2;
  }

  optional Status status = 16;
}

message Event {
  // The name of the event.
  optional string event_name = 1;

  // A unique identifier for a trace.
  optional string trace_id = 2;

  // A unique identifier for a span within a trace.
  optional string span_id = 3;

  // The time the event occurred in nanoseconds since epoch.
  optional int64 time_unix_nano = 4;
  
  // The time the event was observed in nanoseconds since epoch.
  optional int64 observed_time_unix_nano = 5;

  // The severity number of the event.
  optional string severity_number = 6;

  // The severity text of the event.
  optional string severity_text = 7;

  // The body content of the event, often containing JSON or other structured data.
  optional string body = 8;

  // A map of attribute key-value pairs associated with the event.
  map<string, string> attributes = 9;

  // The number of attributes that were discarded.
  optional int32 dropped_attributes_count = 10;

  // Flags, a bit field.
  optional int32 flags = 11;
}
